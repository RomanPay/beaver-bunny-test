{"version":3,"file":"151.a1c7fd7e75084d104966.js","mappings":"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","sources":["webpack://pixi_webpack_template/./node_modules/pixi.js/lib/scene/graphics/gl/GlGraphicsAdaptor.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/scene/mesh/gl/GlMeshAdaptor.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/batcher/gl/GlBatchAdaptor.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/buffer/const.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/buffer/GlBuffer.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/buffer/GlBufferSystem.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/context/GlContextSystem.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/const.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/geometry/utils/getGlTypeFromFormat.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/geometry/GlGeometrySystem.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/GlBackBufferSystem.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/GlColorMaskSystem.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/GlEncoderSystem.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/GlStencilSystem.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/createUboElementsSTD40.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/generateArraySyncSTD40.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/createUboSyncSTD40.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/GlUboSystem.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/GlRenderTarget.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/renderTarget/GlRenderTargetAdaptor.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/renderTarget/GlRenderTargetSystem.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlProgramData.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/compileShader.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/defaultValue.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/mapType.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/logProgramError.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlShaderSystem.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/generateProgram.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/extractAttributesFromGlProgram.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/getUniformData.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/getUboData.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/GenerateShaderSyncCode.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/generateUniformsSyncTypes.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlUniformGroupSystem.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/utils/generateUniformsSync.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/state/GlStateSystem.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/state/mapWebGLBlendModesToPixi.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/GlTexture.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadBufferImageResource.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadCompressedTextureResource.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadImageResource.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/uploaders/glUploadVideoResource.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/pixiToGlMaps.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/applyStyleParams.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/GlTextureSystem.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlInternalFormat.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlType.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/texture/utils/mapFormatToGlFormat.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/WebGLRenderer.mjs","webpack://pixi_webpack_template/./node_modules/pixi.js/lib/rendering/renderers/gl/shader/getBatchSamplersUniformGroup.mjs"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { colorBitGl } from '../../../rendering/high-shader/shader-bits/colorBit.mjs';\nimport { generateTextureBatchBitGl } from '../../../rendering/high-shader/shader-bits/generateTextureBatchBit.mjs';\nimport { localUniformBitGl } from '../../../rendering/high-shader/shader-bits/localUniformBit.mjs';\nimport { roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { getBatchSamplersUniformGroup } from '../../../rendering/renderers/gl/shader/getBatchSamplersUniformGroup.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { maxRecommendedTextures } from '../../../rendering/renderers/shared/texture/utils/maxRecommendedTextures.mjs';\n\n\"use strict\";\nclass GlGraphicsAdaptor {\n  init() {\n    const uniforms = new UniformGroup({\n      uColor: { value: new Float32Array([1, 1, 1, 1]), type: \"vec4<f32>\" },\n      uTransformMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uRound: { value: 0, type: \"f32\" }\n    });\n    const maxTextures = maxRecommendedTextures();\n    const glProgram = compileHighShaderGlProgram({\n      name: \"graphics\",\n      bits: [\n        colorBitGl,\n        generateTextureBatchBitGl(maxTextures),\n        localUniformBitGl,\n        roundPixelsBitGl\n      ]\n    });\n    this.shader = new Shader({\n      glProgram,\n      resources: {\n        localUniforms: uniforms,\n        batchSamplers: getBatchSamplersUniformGroup(maxTextures)\n      }\n    });\n  }\n  execute(graphicsPipe, renderable) {\n    const context = renderable.context;\n    const shader = context.customShader || this.shader;\n    const renderer = graphicsPipe.renderer;\n    const contextSystem = renderer.graphicsContext;\n    const {\n      geometry,\n      instructions\n    } = contextSystem.getContextRenderData(context);\n    shader.groups[0] = renderer.globalUniforms.bindGroup;\n    renderer.state.set(graphicsPipe.state);\n    renderer.shader.bind(shader);\n    renderer.geometry.bind(geometry, shader.glProgram);\n    const batches = instructions.instructions;\n    for (let i = 0; i < instructions.instructionSize; i++) {\n      const batch = batches[i];\n      if (batch.size) {\n        for (let j = 0; j < batch.textures.textures.length; j++) {\n          renderer.texture.bind(batch.textures.textures[j], j);\n        }\n        renderer.geometry.draw(\"triangle-list\", batch.size, batch.start);\n      }\n    }\n  }\n  destroy() {\n    this.shader.destroy(true);\n    this.shader = null;\n  }\n}\n/** @ignore */\nGlGraphicsAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"graphics\"\n};\n\nexport { GlGraphicsAdaptor };\n//# sourceMappingURL=GlGraphicsAdaptor.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { localUniformBitGl } from '../../../rendering/high-shader/shader-bits/localUniformBit.mjs';\nimport { roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { textureBitGl } from '../../../rendering/high-shader/shader-bits/textureBit.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { warn } from '../../../utils/logging/warn.mjs';\n\n\"use strict\";\nclass GlMeshAdaptor {\n  init() {\n    const glProgram = compileHighShaderGlProgram({\n      name: \"mesh\",\n      bits: [\n        localUniformBitGl,\n        textureBitGl,\n        roundPixelsBitGl\n      ]\n    });\n    this._shader = new Shader({\n      glProgram,\n      resources: {\n        uTexture: Texture.EMPTY.source,\n        textureUniforms: {\n          uTextureMatrix: { type: \"mat3x3<f32>\", value: new Matrix() }\n        }\n      }\n    });\n  }\n  execute(meshPipe, mesh) {\n    const renderer = meshPipe.renderer;\n    let shader = mesh._shader;\n    if (!shader) {\n      shader = this._shader;\n      const texture = mesh.texture;\n      const source = texture.source;\n      shader.resources.uTexture = source;\n      shader.resources.uSampler = source.style;\n      shader.resources.textureUniforms.uniforms.uTextureMatrix = texture.textureMatrix.mapCoord;\n    } else if (!shader.glProgram) {\n      warn(\"Mesh shader has no glProgram\", mesh.shader);\n      return;\n    }\n    shader.groups[100] = renderer.globalUniforms.bindGroup;\n    shader.groups[101] = meshPipe.localUniformsBindGroup;\n    renderer.encoder.draw({\n      geometry: mesh._geometry,\n      shader,\n      state: mesh.state\n    });\n  }\n  destroy() {\n    this._shader.destroy(true);\n    this._shader = null;\n  }\n}\nGlMeshAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"mesh\"\n};\n\nexport { GlMeshAdaptor };\n//# sourceMappingURL=GlMeshAdaptor.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { compileHighShaderGlProgram } from '../../high-shader/compileHighShaderToProgram.mjs';\nimport { colorBitGl } from '../../high-shader/shader-bits/colorBit.mjs';\nimport { generateTextureBatchBitGl } from '../../high-shader/shader-bits/generateTextureBatchBit.mjs';\nimport { roundPixelsBitGl } from '../../high-shader/shader-bits/roundPixelsBit.mjs';\nimport { getBatchSamplersUniformGroup } from '../../renderers/gl/shader/getBatchSamplersUniformGroup.mjs';\nimport { Shader } from '../../renderers/shared/shader/Shader.mjs';\nimport { State } from '../../renderers/shared/state/State.mjs';\nimport { maxRecommendedTextures } from '../../renderers/shared/texture/utils/maxRecommendedTextures.mjs';\n\n\"use strict\";\nclass GlBatchAdaptor {\n  constructor() {\n    this._didUpload = false;\n    this._tempState = State.for2d();\n  }\n  init(batcherPipe) {\n    const maxTextures = maxRecommendedTextures();\n    const glProgram = compileHighShaderGlProgram({\n      name: \"batch\",\n      bits: [\n        colorBitGl,\n        generateTextureBatchBitGl(maxTextures),\n        roundPixelsBitGl\n      ]\n    });\n    this._shader = new Shader({\n      glProgram,\n      resources: {\n        batchSamplers: getBatchSamplersUniformGroup(maxTextures)\n      }\n    });\n    batcherPipe.renderer.runners.contextChange.add(this);\n  }\n  contextChange() {\n    this._didUpload = false;\n  }\n  start(batchPipe, geometry) {\n    const renderer = batchPipe.renderer;\n    renderer.shader.bind(this._shader, this._didUpload);\n    renderer.shader.updateUniformGroup(renderer.globalUniforms.uniformGroup);\n    renderer.geometry.bind(geometry, this._shader.glProgram);\n  }\n  execute(batchPipe, batch) {\n    const renderer = batchPipe.renderer;\n    this._didUpload = true;\n    this._tempState.blendMode = batch.blendMode;\n    renderer.state.set(this._tempState);\n    const textures = batch.textures.textures;\n    for (let i = 0; i < textures.length; i++) {\n      renderer.texture.bind(textures[i], i);\n    }\n    renderer.geometry.draw(\"triangle-list\", batch.size, batch.start);\n  }\n  destroy() {\n    this._shader.destroy(true);\n    this._shader = null;\n  }\n}\n/** @ignore */\nGlBatchAdaptor.extension = {\n  type: [\n    ExtensionType.WebGLPipesAdaptor\n  ],\n  name: \"batch\"\n};\n\nexport { GlBatchAdaptor };\n//# sourceMappingURL=GlBatchAdaptor.mjs.map\n","\"use strict\";\nvar BUFFER_TYPE = /* @__PURE__ */ ((BUFFER_TYPE2) => {\n  BUFFER_TYPE2[BUFFER_TYPE2[\"ELEMENT_ARRAY_BUFFER\"] = 34963] = \"ELEMENT_ARRAY_BUFFER\";\n  BUFFER_TYPE2[BUFFER_TYPE2[\"ARRAY_BUFFER\"] = 34962] = \"ARRAY_BUFFER\";\n  BUFFER_TYPE2[BUFFER_TYPE2[\"UNIFORM_BUFFER\"] = 35345] = \"UNIFORM_BUFFER\";\n  return BUFFER_TYPE2;\n})(BUFFER_TYPE || {});\n\nexport { BUFFER_TYPE };\n//# sourceMappingURL=const.mjs.map\n","\"use strict\";\nclass GlBuffer {\n  constructor(buffer, type) {\n    this.buffer = buffer || null;\n    this.updateID = -1;\n    this.byteLength = -1;\n    this.type = type;\n  }\n}\n\nexport { GlBuffer };\n//# sourceMappingURL=GlBuffer.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { BufferUsage } from '../../shared/buffer/const.mjs';\nimport { BUFFER_TYPE } from './const.mjs';\nimport { GlBuffer } from './GlBuffer.mjs';\n\n\"use strict\";\nclass GlBufferSystem {\n  /**\n   * @param {Renderer} renderer - The renderer this System works for.\n   */\n  constructor(renderer) {\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n    /** Cache keeping track of the base bound buffer bases */\n    this._boundBufferBases = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n  }\n  /**\n   * @ignore\n   */\n  destroy() {\n    this._renderer = null;\n    this._gl = null;\n    this._gpuBuffers = null;\n    this._boundBufferBases = null;\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n    this._gl = this._renderer.gl;\n  }\n  getGlBuffer(buffer) {\n    return this._gpuBuffers[buffer.uid] || this.createGLBuffer(buffer);\n  }\n  /**\n   * This binds specified buffer. On first run, it will create the webGL buffers for the context too\n   * @param buffer - the buffer to bind to the renderer\n   */\n  bind(buffer) {\n    const { _gl: gl } = this;\n    const glBuffer = this.getGlBuffer(buffer);\n    gl.bindBuffer(glBuffer.type, glBuffer.buffer);\n  }\n  /**\n   * Binds an uniform buffer to at the given index.\n   *\n   * A cache is used so a buffer will not be bound again if already bound.\n   * @param buffer - the buffer to bind\n   * @param index - the base index to bind it to.\n   */\n  bindBufferBase(buffer, index) {\n    const { _gl: gl } = this;\n    if (this._boundBufferBases[index] !== buffer) {\n      const glBuffer = this.getGlBuffer(buffer);\n      this._boundBufferBases[index] = buffer;\n      gl.bindBufferBase(gl.UNIFORM_BUFFER, index, glBuffer.buffer);\n    }\n  }\n  /**\n   * Binds a buffer whilst also binding its range.\n   * This will make the buffer start from the offset supplied rather than 0 when it is read.\n   * @param buffer - the buffer to bind\n   * @param index - the base index to bind at, defaults to 0\n   * @param offset - the offset to bind at (this is blocks of 256). 0 = 0, 1 = 256, 2 = 512 etc\n   */\n  bindBufferRange(buffer, index, offset) {\n    const { _gl: gl } = this;\n    offset = offset || 0;\n    const glBuffer = this.getGlBuffer(buffer);\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, index || 0, glBuffer.buffer, offset * 256, 256);\n  }\n  /**\n   * Will ensure the data in the buffer is uploaded to the GPU.\n   * @param {Buffer} buffer - the buffer to update\n   */\n  updateBuffer(buffer) {\n    const { _gl: gl } = this;\n    const glBuffer = this.getGlBuffer(buffer);\n    if (buffer._updateID === glBuffer.updateID) {\n      return glBuffer;\n    }\n    glBuffer.updateID = buffer._updateID;\n    gl.bindBuffer(glBuffer.type, glBuffer.buffer);\n    const data = buffer.data;\n    if (glBuffer.byteLength >= buffer.data.byteLength) {\n      gl.bufferSubData(glBuffer.type, 0, data, 0, buffer._updateSize / data.BYTES_PER_ELEMENT);\n    } else {\n      const drawType = buffer.descriptor.usage & BufferUsage.STATIC ? gl.STATIC_DRAW : gl.DYNAMIC_DRAW;\n      glBuffer.byteLength = data.byteLength;\n      gl.bufferData(glBuffer.type, data, drawType);\n    }\n    return glBuffer;\n  }\n  /** dispose all WebGL resources of all managed buffers */\n  destroyAll() {\n    const gl = this._gl;\n    for (const id in this._gpuBuffers) {\n      gl.deleteBuffer(this._gpuBuffers[id].buffer);\n    }\n    this._gpuBuffers = /* @__PURE__ */ Object.create(null);\n  }\n  /**\n   * Disposes buffer\n   * @param {Buffer} buffer - buffer with data\n   * @param {boolean} [contextLost=false] - If context was lost, we suppress deleteVertexArray\n   */\n  onBufferDestroy(buffer, contextLost) {\n    const glBuffer = this._gpuBuffers[buffer.uid];\n    const gl = this._gl;\n    if (!contextLost) {\n      gl.deleteBuffer(glBuffer.buffer);\n    }\n    this._gpuBuffers[buffer.uid] = null;\n  }\n  /**\n   * creates and attaches a GLBuffer object tied to the current context.\n   * @param buffer\n   * @protected\n   */\n  createGLBuffer(buffer) {\n    const { _gl: gl } = this;\n    let type = BUFFER_TYPE.ARRAY_BUFFER;\n    if (buffer.descriptor.usage & BufferUsage.INDEX) {\n      type = BUFFER_TYPE.ELEMENT_ARRAY_BUFFER;\n    } else if (buffer.descriptor.usage & BufferUsage.UNIFORM) {\n      type = BUFFER_TYPE.UNIFORM_BUFFER;\n    }\n    const glBuffer = new GlBuffer(gl.createBuffer(), type);\n    this._gpuBuffers[buffer.uid] = glBuffer;\n    buffer.on(\"destroy\", this.onBufferDestroy, this);\n    return glBuffer;\n  }\n}\n/** @ignore */\nGlBufferSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"buffer\"\n};\n\nexport { GlBufferSystem };\n//# sourceMappingURL=GlBufferSystem.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\n\n\"use strict\";\nconst _GlContextSystem = class _GlContextSystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    /**\n     * Features supported by current renderer.\n     * @type {object}\n     * @readonly\n     */\n    this.supports = {\n      /** Support for 32-bit indices buffer. */\n      uint32Indices: true,\n      /** Support for UniformBufferObjects */\n      uniformBufferObject: true,\n      /** Support for VertexArrayObjects */\n      vertexArrayObject: true,\n      /** Support for SRGB texture format */\n      srgbTextures: true,\n      /** Support for wrapping modes if a texture is non-power of two */\n      nonPowOf2wrapping: true,\n      /** Support for MSAA (antialiasing of dynamic textures) */\n      msaa: true,\n      /** Support for mipmaps if a texture is non-power of two */\n      nonPowOf2mipmaps: true\n    };\n    this._renderer = renderer;\n    this.extensions = /* @__PURE__ */ Object.create(null);\n    this.handleContextLost = this.handleContextLost.bind(this);\n    this.handleContextRestored = this.handleContextRestored.bind(this);\n  }\n  /**\n   * `true` if the context is lost\n   * @readonly\n   */\n  get isLost() {\n    return !this.gl || this.gl.isContextLost();\n  }\n  /**\n   * Handles the context change event.\n   * @param {WebGLRenderingContext} gl - New WebGL context.\n   */\n  contextChange(gl) {\n    this.gl = gl;\n    this._renderer.gl = gl;\n  }\n  init(options) {\n    options = { ..._GlContextSystem.defaultOptions, ...options };\n    if (options.context) {\n      this.initFromContext(options.context);\n    } else {\n      const alpha = this._renderer.background.alpha < 1;\n      const premultipliedAlpha = options.premultipliedAlpha ?? true;\n      const antialias = options.antialias && !this._renderer.backBuffer.useBackBuffer;\n      this.createContext(options.preferWebGLVersion, {\n        alpha,\n        premultipliedAlpha,\n        antialias,\n        stencil: true,\n        preserveDrawingBuffer: options.preserveDrawingBuffer,\n        powerPreference: options.powerPreference ?? \"default\"\n      });\n    }\n  }\n  /**\n   * Initializes the context.\n   * @protected\n   * @param {WebGLRenderingContext} gl - WebGL context\n   */\n  initFromContext(gl) {\n    this.gl = gl;\n    this.webGLVersion = gl instanceof DOMAdapter.get().getWebGLRenderingContext() ? 1 : 2;\n    this.getExtensions();\n    this.validateContext(gl);\n    this._renderer.runners.contextChange.emit(gl);\n    const element = this._renderer.view.canvas;\n    element.addEventListener(\"webglcontextlost\", this.handleContextLost, false);\n    element.addEventListener(\"webglcontextrestored\", this.handleContextRestored, false);\n  }\n  /**\n   * Initialize from context options\n   * @protected\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext\n   * @param preferWebGLVersion\n   * @param {object} options - context attributes\n   */\n  createContext(preferWebGLVersion, options) {\n    let gl;\n    const canvas = this._renderer.view.canvas;\n    if (preferWebGLVersion === 2) {\n      gl = canvas.getContext(\"webgl2\", options);\n    }\n    if (!gl) {\n      gl = canvas.getContext(\"webgl\", options);\n      if (!gl) {\n        throw new Error(\"This browser does not support WebGL. Try using the canvas renderer\");\n      }\n    }\n    this.gl = gl;\n    this.initFromContext(this.gl);\n  }\n  /** Auto-populate the {@link GlContextSystem.extensions extensions}. */\n  getExtensions() {\n    const { gl } = this;\n    const common = {\n      anisotropicFiltering: gl.getExtension(\"EXT_texture_filter_anisotropic\"),\n      floatTextureLinear: gl.getExtension(\"OES_texture_float_linear\"),\n      s3tc: gl.getExtension(\"WEBGL_compressed_texture_s3tc\"),\n      s3tc_sRGB: gl.getExtension(\"WEBGL_compressed_texture_s3tc_srgb\"),\n      // eslint-disable-line camelcase\n      etc: gl.getExtension(\"WEBGL_compressed_texture_etc\"),\n      etc1: gl.getExtension(\"WEBGL_compressed_texture_etc1\"),\n      pvrtc: gl.getExtension(\"WEBGL_compressed_texture_pvrtc\") || gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\"),\n      atc: gl.getExtension(\"WEBGL_compressed_texture_atc\"),\n      astc: gl.getExtension(\"WEBGL_compressed_texture_astc\"),\n      bptc: gl.getExtension(\"EXT_texture_compression_bptc\"),\n      rgtc: gl.getExtension(\"EXT_texture_compression_rgtc\"),\n      loseContext: gl.getExtension(\"WEBGL_lose_context\")\n    };\n    if (this.webGLVersion === 1) {\n      this.extensions = {\n        ...common,\n        drawBuffers: gl.getExtension(\"WEBGL_draw_buffers\"),\n        depthTexture: gl.getExtension(\"WEBGL_depth_texture\"),\n        vertexArrayObject: gl.getExtension(\"OES_vertex_array_object\") || gl.getExtension(\"MOZ_OES_vertex_array_object\") || gl.getExtension(\"WEBKIT_OES_vertex_array_object\"),\n        uint32ElementIndex: gl.getExtension(\"OES_element_index_uint\"),\n        // Floats and half-floats\n        floatTexture: gl.getExtension(\"OES_texture_float\"),\n        floatTextureLinear: gl.getExtension(\"OES_texture_float_linear\"),\n        textureHalfFloat: gl.getExtension(\"OES_texture_half_float\"),\n        textureHalfFloatLinear: gl.getExtension(\"OES_texture_half_float_linear\"),\n        vertexAttribDivisorANGLE: gl.getExtension(\"ANGLE_instanced_arrays\"),\n        srgb: gl.getExtension(\"EXT_sRGB\")\n      };\n    } else {\n      this.extensions = {\n        ...common,\n        colorBufferFloat: gl.getExtension(\"EXT_color_buffer_float\")\n      };\n      const provokeExt = gl.getExtension(\"WEBGL_provoking_vertex\");\n      if (provokeExt) {\n        provokeExt.provokingVertexWEBGL(provokeExt.FIRST_VERTEX_CONVENTION_WEBGL);\n      }\n    }\n  }\n  /**\n   * Handles a lost webgl context\n   * @param {WebGLContextEvent} event - The context lost event.\n   */\n  handleContextLost(event) {\n    event.preventDefault();\n    if (this._contextLossForced) {\n      this._contextLossForced = false;\n      setTimeout(() => {\n        if (this.gl.isContextLost()) {\n          this.extensions.loseContext?.restoreContext();\n        }\n      }, 0);\n    }\n  }\n  /** Handles a restored webgl context. */\n  handleContextRestored() {\n    this._renderer.runners.contextChange.emit(this.gl);\n  }\n  destroy() {\n    const element = this._renderer.view.canvas;\n    this._renderer = null;\n    element.removeEventListener(\"webglcontextlost\", this.handleContextLost);\n    element.removeEventListener(\"webglcontextrestored\", this.handleContextRestored);\n    this.gl.useProgram(null);\n    this.extensions.loseContext?.loseContext();\n  }\n  /**\n   * this function can be called to force a webGL context loss\n   * this will release all resources on the GPU.\n   * Useful if you need to put Pixi to sleep, and save some GPU memory\n   *\n   * As soon as render is called - all resources will be created again.\n   */\n  forceContextLoss() {\n    this.extensions.loseContext?.loseContext();\n    this._contextLossForced = true;\n  }\n  /**\n   * Validate context.\n   * @param {WebGLRenderingContext} gl - Render context.\n   */\n  validateContext(gl) {\n    const attributes = gl.getContextAttributes();\n    if (attributes && !attributes.stencil) {\n      warn(\"Provided WebGL context does not have a stencil buffer, masks may not render correctly\");\n    }\n    const supports = this.supports;\n    const isWebGl2 = this.webGLVersion === 2;\n    const extensions = this.extensions;\n    supports.uint32Indices = isWebGl2 || !!extensions.uint32ElementIndex;\n    supports.uniformBufferObject = isWebGl2;\n    supports.vertexArrayObject = isWebGl2 || !!extensions.vertexArrayObject;\n    supports.srgbTextures = isWebGl2 || !!extensions.srgb;\n    supports.nonPowOf2wrapping = isWebGl2;\n    supports.nonPowOf2mipmaps = isWebGl2;\n    supports.msaa = isWebGl2;\n    if (!supports.uint32Indices) {\n      warn(\"Provided WebGL context does not support 32 index buffer, large scenes may not render correctly\");\n    }\n  }\n};\n/** @ignore */\n_GlContextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"context\"\n};\n/** The default options for the system. */\n_GlContextSystem.defaultOptions = {\n  /**\n   * {@link WebGLOptions.context}\n   * @default null\n   */\n  context: null,\n  /**\n   * {@link WebGLOptions.premultipliedAlpha}\n   * @default true\n   */\n  premultipliedAlpha: true,\n  /**\n   * {@link WebGLOptions.preserveDrawingBuffer}\n   * @default false\n   */\n  preserveDrawingBuffer: false,\n  /**\n   * {@link WebGLOptions.powerPreference}\n   * @default default\n   */\n  powerPreference: void 0,\n  /**\n   * {@link WebGLOptions.webGLVersion}\n   * @default 2\n   */\n  preferWebGLVersion: 2\n};\nlet GlContextSystem = _GlContextSystem;\n\nexport { GlContextSystem };\n//# sourceMappingURL=GlContextSystem.mjs.map\n","\"use strict\";\nvar GL_FORMATS = /* @__PURE__ */ ((GL_FORMATS2) => {\n  GL_FORMATS2[GL_FORMATS2[\"RGBA\"] = 6408] = \"RGBA\";\n  GL_FORMATS2[GL_FORMATS2[\"RGB\"] = 6407] = \"RGB\";\n  GL_FORMATS2[GL_FORMATS2[\"RG\"] = 33319] = \"RG\";\n  GL_FORMATS2[GL_FORMATS2[\"RED\"] = 6403] = \"RED\";\n  GL_FORMATS2[GL_FORMATS2[\"RGBA_INTEGER\"] = 36249] = \"RGBA_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RGB_INTEGER\"] = 36248] = \"RGB_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RG_INTEGER\"] = 33320] = \"RG_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"RED_INTEGER\"] = 36244] = \"RED_INTEGER\";\n  GL_FORMATS2[GL_FORMATS2[\"ALPHA\"] = 6406] = \"ALPHA\";\n  GL_FORMATS2[GL_FORMATS2[\"LUMINANCE\"] = 6409] = \"LUMINANCE\";\n  GL_FORMATS2[GL_FORMATS2[\"LUMINANCE_ALPHA\"] = 6410] = \"LUMINANCE_ALPHA\";\n  GL_FORMATS2[GL_FORMATS2[\"DEPTH_COMPONENT\"] = 6402] = \"DEPTH_COMPONENT\";\n  GL_FORMATS2[GL_FORMATS2[\"DEPTH_STENCIL\"] = 34041] = \"DEPTH_STENCIL\";\n  return GL_FORMATS2;\n})(GL_FORMATS || {});\nvar GL_TARGETS = /* @__PURE__ */ ((GL_TARGETS2) => {\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_2D\"] = 3553] = \"TEXTURE_2D\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP\"] = 34067] = \"TEXTURE_CUBE_MAP\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_2D_ARRAY\"] = 35866] = \"TEXTURE_2D_ARRAY\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_X\"] = 34069] = \"TEXTURE_CUBE_MAP_POSITIVE_X\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_X\"] = 34070] = \"TEXTURE_CUBE_MAP_NEGATIVE_X\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_Y\"] = 34071] = \"TEXTURE_CUBE_MAP_POSITIVE_Y\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_Y\"] = 34072] = \"TEXTURE_CUBE_MAP_NEGATIVE_Y\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_POSITIVE_Z\"] = 34073] = \"TEXTURE_CUBE_MAP_POSITIVE_Z\";\n  GL_TARGETS2[GL_TARGETS2[\"TEXTURE_CUBE_MAP_NEGATIVE_Z\"] = 34074] = \"TEXTURE_CUBE_MAP_NEGATIVE_Z\";\n  return GL_TARGETS2;\n})(GL_TARGETS || {});\nvar GL_WRAP_MODES = /* @__PURE__ */ ((GL_WRAP_MODES2) => {\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"CLAMP\"] = 33071] = \"CLAMP\";\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"REPEAT\"] = 10497] = \"REPEAT\";\n  GL_WRAP_MODES2[GL_WRAP_MODES2[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\n  return GL_WRAP_MODES2;\n})(GL_WRAP_MODES || {});\nvar GL_TYPES = /* @__PURE__ */ ((GL_TYPES2) => {\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_5_6_5\"] = 33635] = \"UNSIGNED_SHORT_5_6_5\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_4_4_4_4\"] = 32819] = \"UNSIGNED_SHORT_4_4_4_4\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_SHORT_5_5_5_1\"] = 32820] = \"UNSIGNED_SHORT_5_5_5_1\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_10F_11F_11F_REV\"] = 35899] = \"UNSIGNED_INT_10F_11F_11F_REV\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_2_10_10_10_REV\"] = 33640] = \"UNSIGNED_INT_2_10_10_10_REV\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_24_8\"] = 34042] = \"UNSIGNED_INT_24_8\";\n  GL_TYPES2[GL_TYPES2[\"UNSIGNED_INT_5_9_9_9_REV\"] = 35902] = \"UNSIGNED_INT_5_9_9_9_REV\";\n  GL_TYPES2[GL_TYPES2[\"BYTE\"] = 5120] = \"BYTE\";\n  GL_TYPES2[GL_TYPES2[\"SHORT\"] = 5122] = \"SHORT\";\n  GL_TYPES2[GL_TYPES2[\"INT\"] = 5124] = \"INT\";\n  GL_TYPES2[GL_TYPES2[\"FLOAT\"] = 5126] = \"FLOAT\";\n  GL_TYPES2[GL_TYPES2[\"FLOAT_32_UNSIGNED_INT_24_8_REV\"] = 36269] = \"FLOAT_32_UNSIGNED_INT_24_8_REV\";\n  GL_TYPES2[GL_TYPES2[\"HALF_FLOAT\"] = 36193] = \"HALF_FLOAT\";\n  return GL_TYPES2;\n})(GL_TYPES || {});\n\nexport { GL_FORMATS, GL_TARGETS, GL_TYPES, GL_WRAP_MODES };\n//# sourceMappingURL=const.mjs.map\n","import { GL_TYPES } from '../../texture/const.mjs';\n\n\"use strict\";\nconst infoMap = {\n  uint8x2: GL_TYPES.UNSIGNED_BYTE,\n  uint8x4: GL_TYPES.UNSIGNED_BYTE,\n  sint8x2: GL_TYPES.BYTE,\n  sint8x4: GL_TYPES.BYTE,\n  unorm8x2: GL_TYPES.UNSIGNED_BYTE,\n  unorm8x4: GL_TYPES.UNSIGNED_BYTE,\n  snorm8x2: GL_TYPES.BYTE,\n  snorm8x4: GL_TYPES.BYTE,\n  uint16x2: GL_TYPES.UNSIGNED_SHORT,\n  uint16x4: GL_TYPES.UNSIGNED_SHORT,\n  sint16x2: GL_TYPES.SHORT,\n  sint16x4: GL_TYPES.SHORT,\n  unorm16x2: GL_TYPES.UNSIGNED_SHORT,\n  unorm16x4: GL_TYPES.UNSIGNED_SHORT,\n  snorm16x2: GL_TYPES.SHORT,\n  snorm16x4: GL_TYPES.SHORT,\n  float16x2: GL_TYPES.HALF_FLOAT,\n  float16x4: GL_TYPES.HALF_FLOAT,\n  float32: GL_TYPES.FLOAT,\n  float32x2: GL_TYPES.FLOAT,\n  float32x3: GL_TYPES.FLOAT,\n  float32x4: GL_TYPES.FLOAT,\n  uint32: GL_TYPES.UNSIGNED_INT,\n  uint32x2: GL_TYPES.UNSIGNED_INT,\n  uint32x3: GL_TYPES.UNSIGNED_INT,\n  uint32x4: GL_TYPES.UNSIGNED_INT,\n  sint32: GL_TYPES.INT,\n  sint32x2: GL_TYPES.INT,\n  sint32x3: GL_TYPES.INT,\n  sint32x4: GL_TYPES.INT\n};\nfunction getGlTypeFromFormat(format) {\n  return infoMap[format] ?? infoMap.float32;\n}\n\nexport { getGlTypeFromFormat };\n//# sourceMappingURL=getGlTypeFromFormat.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { getAttributeInfoFromFormat } from '../../shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nimport { ensureAttributes } from '../shader/program/ensureAttributes.mjs';\nimport { getGlTypeFromFormat } from './utils/getGlTypeFromFormat.mjs';\n\n\"use strict\";\nconst topologyToGlMap = {\n  \"point-list\": 0,\n  \"line-list\": 1,\n  \"line-strip\": 3,\n  \"triangle-list\": 4,\n  \"triangle-strip\": 5\n};\nclass GlGeometrySystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    this._geometryVaoHash = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n    this._activeGeometry = null;\n    this._activeVao = null;\n    this.hasVao = true;\n    this.hasInstance = true;\n  }\n  /** Sets up the renderer context and necessary buffers. */\n  contextChange() {\n    const gl = this.gl = this._renderer.gl;\n    if (!this._renderer.context.supports.vertexArrayObject) {\n      throw new Error(\"[PixiJS] Vertex Array Objects are not supported on this device\");\n    }\n    const nativeVaoExtension = this._renderer.context.extensions.vertexArrayObject;\n    if (nativeVaoExtension) {\n      gl.createVertexArray = () => nativeVaoExtension.createVertexArrayOES();\n      gl.bindVertexArray = (vao) => nativeVaoExtension.bindVertexArrayOES(vao);\n      gl.deleteVertexArray = (vao) => nativeVaoExtension.deleteVertexArrayOES(vao);\n    }\n    const nativeInstancedExtension = this._renderer.context.extensions.vertexAttribDivisorANGLE;\n    if (nativeInstancedExtension) {\n      gl.drawArraysInstanced = (a, b, c, d) => {\n        nativeInstancedExtension.drawArraysInstancedANGLE(a, b, c, d);\n      };\n      gl.drawElementsInstanced = (a, b, c, d, e) => {\n        nativeInstancedExtension.drawElementsInstancedANGLE(a, b, c, d, e);\n      };\n      gl.vertexAttribDivisor = (a, b) => nativeInstancedExtension.vertexAttribDivisorANGLE(a, b);\n    }\n    this._activeGeometry = null;\n    this._activeVao = null;\n    this._geometryVaoHash = /* @__PURE__ */ Object.create(null);\n  }\n  /**\n   * Binds geometry so that is can be drawn. Creating a Vao if required\n   * @param geometry - Instance of geometry to bind.\n   * @param program - Instance of program to use vao for.\n   */\n  bind(geometry, program) {\n    const gl = this.gl;\n    this._activeGeometry = geometry;\n    const vao = this.getVao(geometry, program);\n    if (this._activeVao !== vao) {\n      this._activeVao = vao;\n      gl.bindVertexArray(vao);\n    }\n    this.updateBuffers();\n  }\n  /** Reset and unbind any active VAO and geometry. */\n  reset() {\n    this.unbind();\n  }\n  /** Update buffers of the currently bound geometry. */\n  updateBuffers() {\n    const geometry = this._activeGeometry;\n    const bufferSystem = this._renderer.buffer;\n    for (let i = 0; i < geometry.buffers.length; i++) {\n      const buffer = geometry.buffers[i];\n      bufferSystem.updateBuffer(buffer);\n    }\n  }\n  /**\n   * Check compatibility between a geometry and a program\n   * @param geometry - Geometry instance.\n   * @param program - Program instance.\n   */\n  checkCompatibility(geometry, program) {\n    const geometryAttributes = geometry.attributes;\n    const shaderAttributes = program._attributeData;\n    for (const j in shaderAttributes) {\n      if (!geometryAttributes[j]) {\n        throw new Error(`shader and geometry incompatible, geometry missing the \"${j}\" attribute`);\n      }\n    }\n  }\n  /**\n   * Takes a geometry and program and generates a unique signature for them.\n   * @param geometry - To get signature from.\n   * @param program - To test geometry against.\n   * @returns - Unique signature of the geometry and program\n   */\n  getSignature(geometry, program) {\n    const attribs = geometry.attributes;\n    const shaderAttributes = program._attributeData;\n    const strings = [\"g\", geometry.uid];\n    for (const i in attribs) {\n      if (shaderAttributes[i]) {\n        strings.push(i, shaderAttributes[i].location);\n      }\n    }\n    return strings.join(\"-\");\n  }\n  getVao(geometry, program) {\n    return this._geometryVaoHash[geometry.uid]?.[program._key] || this.initGeometryVao(geometry, program);\n  }\n  /**\n   * Creates or gets Vao with the same structure as the geometry and stores it on the geometry.\n   * If vao is created, it is bound automatically. We use a shader to infer what and how to set up the\n   * attribute locations.\n   * @param geometry - Instance of geometry to to generate Vao for.\n   * @param program\n   * @param _incRefCount - Increment refCount of all geometry buffers.\n   */\n  initGeometryVao(geometry, program, _incRefCount = true) {\n    const gl = this._renderer.gl;\n    const bufferSystem = this._renderer.buffer;\n    this._renderer.shader._getProgramData(program);\n    this.checkCompatibility(geometry, program);\n    const signature = this.getSignature(geometry, program);\n    if (!this._geometryVaoHash[geometry.uid]) {\n      this._geometryVaoHash[geometry.uid] = /* @__PURE__ */ Object.create(null);\n      geometry.on(\"destroy\", this.onGeometryDestroy, this);\n    }\n    const vaoObjectHash = this._geometryVaoHash[geometry.uid];\n    let vao = vaoObjectHash[signature];\n    if (vao) {\n      vaoObjectHash[program._key] = vao;\n      return vao;\n    }\n    ensureAttributes(geometry, program._attributeData);\n    const buffers = geometry.buffers;\n    vao = gl.createVertexArray();\n    gl.bindVertexArray(vao);\n    for (let i = 0; i < buffers.length; i++) {\n      const buffer = buffers[i];\n      bufferSystem.bind(buffer);\n    }\n    this.activateVao(geometry, program);\n    vaoObjectHash[program._key] = vao;\n    vaoObjectHash[signature] = vao;\n    gl.bindVertexArray(null);\n    return vao;\n  }\n  /**\n   * Disposes geometry.\n   * @param geometry - Geometry with buffers. Only VAO will be disposed\n   * @param [contextLost=false] - If context was lost, we suppress deleteVertexArray\n   */\n  onGeometryDestroy(geometry, contextLost) {\n    const vaoObjectHash = this._geometryVaoHash[geometry.uid];\n    const gl = this.gl;\n    if (vaoObjectHash) {\n      if (contextLost) {\n        for (const i in vaoObjectHash) {\n          if (this._activeVao !== vaoObjectHash[i]) {\n            this.unbind();\n          }\n          gl.deleteVertexArray(vaoObjectHash[i]);\n        }\n      }\n      this._geometryVaoHash[geometry.uid] = null;\n    }\n  }\n  /**\n   * Dispose all WebGL resources of all managed geometries.\n   * @param [contextLost=false] - If context was lost, we suppress `gl.delete` calls\n   */\n  destroyAll(contextLost = false) {\n    const gl = this.gl;\n    for (const i in this._geometryVaoHash) {\n      if (contextLost) {\n        for (const j in this._geometryVaoHash[i]) {\n          const vaoObjectHash = this._geometryVaoHash[i];\n          if (this._activeVao !== vaoObjectHash) {\n            this.unbind();\n          }\n          gl.deleteVertexArray(vaoObjectHash[j]);\n        }\n      }\n      this._geometryVaoHash[i] = null;\n    }\n  }\n  /**\n   * Activate vertex array object.\n   * @param geometry - Geometry instance.\n   * @param program - Shader program instance.\n   */\n  activateVao(geometry, program) {\n    const gl = this._renderer.gl;\n    const bufferSystem = this._renderer.buffer;\n    const attributes = geometry.attributes;\n    if (geometry.indexBuffer) {\n      bufferSystem.bind(geometry.indexBuffer);\n    }\n    let lastBuffer = null;\n    for (const j in attributes) {\n      const attribute = attributes[j];\n      const buffer = attribute.buffer;\n      const glBuffer = bufferSystem.getGlBuffer(buffer);\n      const programAttrib = program._attributeData[j];\n      if (programAttrib) {\n        if (lastBuffer !== glBuffer) {\n          bufferSystem.bind(buffer);\n          lastBuffer = glBuffer;\n        }\n        const location = attribute.location;\n        gl.enableVertexAttribArray(location);\n        const attributeInfo = getAttributeInfoFromFormat(attribute.format);\n        const type = getGlTypeFromFormat(attribute.format);\n        if (programAttrib.format?.substring(1, 4) === \"int\") {\n          gl.vertexAttribIPointer(\n            location,\n            attributeInfo.size,\n            type,\n            attribute.stride,\n            attribute.offset\n          );\n        } else {\n          gl.vertexAttribPointer(\n            location,\n            attributeInfo.size,\n            type,\n            attributeInfo.normalised,\n            attribute.stride,\n            attribute.offset\n          );\n        }\n        if (attribute.instance) {\n          if (this.hasInstance) {\n            gl.vertexAttribDivisor(location, 1);\n          } else {\n            throw new Error(\"geometry error, GPU Instancing is not supported on this device\");\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Draws the currently bound geometry.\n   * @param topology - The type primitive to render.\n   * @param size - The number of elements to be rendered. If not specified, all vertices after the\n   *  starting vertex will be drawn.\n   * @param start - The starting vertex in the geometry to start drawing from. If not specified,\n   *  drawing will start from the first vertex.\n   * @param instanceCount - The number of instances of the set of elements to execute. If not specified,\n   *  all instances will be drawn.\n   */\n  draw(topology, size, start, instanceCount) {\n    const { gl } = this._renderer;\n    const geometry = this._activeGeometry;\n    const glTopology = topologyToGlMap[geometry.topology || topology];\n    instanceCount || (instanceCount = geometry.instanceCount);\n    if (geometry.indexBuffer) {\n      const byteSize = geometry.indexBuffer.data.BYTES_PER_ELEMENT;\n      const glType = byteSize === 2 ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;\n      if (instanceCount > 1) {\n        gl.drawElementsInstanced(glTopology, size || geometry.indexBuffer.data.length, glType, (start || 0) * byteSize, instanceCount);\n      } else {\n        gl.drawElements(glTopology, size || geometry.indexBuffer.data.length, glType, (start || 0) * byteSize);\n      }\n    } else if (instanceCount > 1) {\n      gl.drawArraysInstanced(glTopology, start || 0, size || geometry.getSize(), instanceCount);\n    } else {\n      gl.drawArrays(glTopology, start || 0, size || geometry.getSize());\n    }\n    return this;\n  }\n  /** Unbind/reset everything. */\n  unbind() {\n    this.gl.bindVertexArray(null);\n    this._activeVao = null;\n    this._activeGeometry = null;\n  }\n  destroy() {\n    this._renderer = null;\n    this.gl = null;\n    this._activeVao = null;\n    this._activeGeometry = null;\n  }\n}\n/** @ignore */\nGlGeometrySystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"geometry\"\n};\n\nexport { GlGeometrySystem };\n//# sourceMappingURL=GlGeometrySystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { warn } from '../../../utils/logging/warn.mjs';\nimport { Geometry } from '../shared/geometry/Geometry.mjs';\nimport { Shader } from '../shared/shader/Shader.mjs';\nimport { State } from '../shared/state/State.mjs';\nimport { TextureSource } from '../shared/texture/sources/TextureSource.mjs';\nimport { Texture } from '../shared/texture/Texture.mjs';\nimport { GlProgram } from './shader/GlProgram.mjs';\n\n\"use strict\";\nconst bigTriangleGeometry = new Geometry({\n  attributes: {\n    aPosition: [\n      -1,\n      -1,\n      // Bottom left corner\n      3,\n      -1,\n      // Bottom right corner, extending beyond right edge\n      -1,\n      3\n      // Top left corner, extending beyond top edge\n    ]\n  }\n});\nconst _GlBackBufferSystem = class _GlBackBufferSystem {\n  constructor(renderer) {\n    /** if true, the back buffer is used */\n    this.useBackBuffer = false;\n    this._useBackBufferThisRender = false;\n    this._renderer = renderer;\n  }\n  init(options = {}) {\n    const { useBackBuffer, antialias } = { ..._GlBackBufferSystem.defaultOptions, ...options };\n    this.useBackBuffer = useBackBuffer;\n    this._antialias = antialias;\n    if (!this._renderer.context.supports.msaa) {\n      warn(\"antialiasing, is not supported on when using the back buffer\");\n      this._antialias = false;\n    }\n    this._state = State.for2d();\n    const bigTriangleProgram = new GlProgram({\n      vertex: `\n                attribute vec2 aPosition;\n                out vec2 vUv;\n\n                void main() {\n                    gl_Position = vec4(aPosition, 0.0, 1.0);\n\n                    vUv = (aPosition + 1.0) / 2.0;\n\n                    // flip dem UVs\n                    vUv.y = 1.0 - vUv.y;\n                }`,\n      fragment: `\n                in vec2 vUv;\n                out vec4 finalColor;\n\n                uniform sampler2D uTexture;\n\n                void main() {\n                    finalColor = texture(uTexture, vUv);\n                }`,\n      name: \"big-triangle\"\n    });\n    this._bigTriangleShader = new Shader({\n      glProgram: bigTriangleProgram,\n      resources: {\n        uTexture: Texture.WHITE.source\n      }\n    });\n  }\n  /**\n   * This is called before the RenderTargetSystem is started. This is where\n   * we replace the target with the back buffer if required.\n   * @param options - The options for this render.\n   */\n  renderStart(options) {\n    const renderTarget = this._renderer.renderTarget.getRenderTarget(options.target);\n    this._useBackBufferThisRender = this.useBackBuffer && !!renderTarget.isRoot;\n    if (this._useBackBufferThisRender) {\n      const renderTarget2 = this._renderer.renderTarget.getRenderTarget(options.target);\n      this._targetTexture = renderTarget2.colorTexture;\n      options.target = this._getBackBufferTexture(renderTarget2.colorTexture);\n    }\n  }\n  renderEnd() {\n    this._presentBackBuffer();\n  }\n  _presentBackBuffer() {\n    const renderer = this._renderer;\n    renderer.renderTarget.finishRenderPass();\n    if (!this._useBackBufferThisRender)\n      return;\n    renderer.renderTarget.bind(this._targetTexture, false);\n    this._bigTriangleShader.resources.uTexture = this._backBufferTexture.source;\n    renderer.encoder.draw({\n      geometry: bigTriangleGeometry,\n      shader: this._bigTriangleShader,\n      state: this._state\n    });\n  }\n  _getBackBufferTexture(targetSourceTexture) {\n    this._backBufferTexture = this._backBufferTexture || new Texture({\n      source: new TextureSource({\n        width: targetSourceTexture.width,\n        height: targetSourceTexture.height,\n        resolution: targetSourceTexture._resolution,\n        antialias: this._antialias\n      })\n    });\n    this._backBufferTexture.source.resize(\n      targetSourceTexture.width,\n      targetSourceTexture.height,\n      targetSourceTexture._resolution\n    );\n    return this._backBufferTexture;\n  }\n  /** destroys the back buffer */\n  destroy() {\n    if (this._backBufferTexture) {\n      this._backBufferTexture.destroy();\n      this._backBufferTexture = null;\n    }\n  }\n};\n/** @ignore */\n_GlBackBufferSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"backBuffer\",\n  priority: 1\n};\n/** default options for the back buffer system */\n_GlBackBufferSystem.defaultOptions = {\n  /** if true will use the back buffer where required */\n  useBackBuffer: false\n};\nlet GlBackBufferSystem = _GlBackBufferSystem;\n\nexport { GlBackBufferSystem };\n//# sourceMappingURL=GlBackBufferSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\n\n\"use strict\";\nclass GlColorMaskSystem {\n  constructor(renderer) {\n    this._colorMaskCache = 15;\n    this._renderer = renderer;\n  }\n  setMask(colorMask) {\n    if (this._colorMaskCache === colorMask)\n      return;\n    this._colorMaskCache = colorMask;\n    this._renderer.gl.colorMask(\n      !!(colorMask & 8),\n      !!(colorMask & 4),\n      !!(colorMask & 2),\n      !!(colorMask & 1)\n    );\n  }\n}\n/** @ignore */\nGlColorMaskSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"colorMask\"\n};\n\nexport { GlColorMaskSystem };\n//# sourceMappingURL=GlColorMaskSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\n\n\"use strict\";\nclass GlEncoderSystem {\n  constructor(renderer) {\n    this.commandFinished = Promise.resolve();\n    this._renderer = renderer;\n  }\n  setGeometry(geometry, shader) {\n    this._renderer.geometry.bind(geometry, shader.glProgram);\n  }\n  finishRenderPass() {\n  }\n  draw(options) {\n    const renderer = this._renderer;\n    const { geometry, shader, state, skipSync, topology: type, size, start, instanceCount } = options;\n    renderer.shader.bind(shader, skipSync);\n    renderer.geometry.bind(geometry, renderer.shader._activeProgram);\n    if (state) {\n      renderer.state.set(state);\n    }\n    renderer.geometry.draw(type, size, start, instanceCount ?? geometry.instanceCount);\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\n/** @ignore */\nGlEncoderSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"encoder\"\n};\n\nexport { GlEncoderSystem };\n//# sourceMappingURL=GlEncoderSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { GpuStencilModesToPixi } from '../gpu/state/GpuStencilModesToPixi.mjs';\nimport { STENCIL_MODES } from '../shared/state/const.mjs';\n\n\"use strict\";\nclass GlStencilSystem {\n  constructor(renderer) {\n    this._stencilCache = {\n      enabled: false,\n      stencilReference: 0,\n      stencilMode: STENCIL_MODES.NONE\n    };\n    this._renderTargetStencilState = /* @__PURE__ */ Object.create(null);\n    renderer.renderTarget.onRenderTargetChange.add(this);\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    this._comparisonFuncMapping = {\n      always: gl.ALWAYS,\n      never: gl.NEVER,\n      equal: gl.EQUAL,\n      \"not-equal\": gl.NOTEQUAL,\n      less: gl.LESS,\n      \"less-equal\": gl.LEQUAL,\n      greater: gl.GREATER,\n      \"greater-equal\": gl.GEQUAL\n    };\n    this._stencilOpsMapping = {\n      keep: gl.KEEP,\n      zero: gl.ZERO,\n      replace: gl.REPLACE,\n      invert: gl.INVERT,\n      \"increment-clamp\": gl.INCR,\n      \"decrement-clamp\": gl.DECR,\n      \"increment-wrap\": gl.INCR_WRAP,\n      \"decrement-wrap\": gl.DECR_WRAP\n    };\n    this._stencilCache.enabled = false;\n    this._stencilCache.stencilMode = STENCIL_MODES.NONE;\n    this._stencilCache.stencilReference = 0;\n  }\n  onRenderTargetChange(renderTarget) {\n    if (this._activeRenderTarget === renderTarget)\n      return;\n    this._activeRenderTarget = renderTarget;\n    let stencilState = this._renderTargetStencilState[renderTarget.uid];\n    if (!stencilState) {\n      stencilState = this._renderTargetStencilState[renderTarget.uid] = {\n        stencilMode: STENCIL_MODES.DISABLED,\n        stencilReference: 0\n      };\n    }\n    this.setStencilMode(stencilState.stencilMode, stencilState.stencilReference);\n  }\n  setStencilMode(stencilMode, stencilReference) {\n    const stencilState = this._renderTargetStencilState[this._activeRenderTarget.uid];\n    const gl = this._gl;\n    const mode = GpuStencilModesToPixi[stencilMode];\n    const _stencilCache = this._stencilCache;\n    stencilState.stencilMode = stencilMode;\n    stencilState.stencilReference = stencilReference;\n    if (stencilMode === STENCIL_MODES.DISABLED) {\n      if (this._stencilCache.enabled) {\n        this._stencilCache.enabled = false;\n        gl.disable(gl.STENCIL_TEST);\n      }\n      return;\n    }\n    if (!this._stencilCache.enabled) {\n      this._stencilCache.enabled = true;\n      gl.enable(gl.STENCIL_TEST);\n    }\n    if (stencilMode !== _stencilCache.stencilMode || _stencilCache.stencilReference !== stencilReference) {\n      _stencilCache.stencilMode = stencilMode;\n      _stencilCache.stencilReference = stencilReference;\n      gl.stencilFunc(this._comparisonFuncMapping[mode.stencilBack.compare], stencilReference, 255);\n      gl.stencilOp(gl.KEEP, gl.KEEP, this._stencilOpsMapping[mode.stencilBack.passOp]);\n    }\n  }\n}\n/** @ignore */\nGlStencilSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"stencil\"\n};\n\nexport { GlStencilSystem };\n//# sourceMappingURL=GlStencilSystem.mjs.map\n","\"use strict\";\nconst WGSL_TO_STD40_SIZE = {\n  f32: 4,\n  \"vec2<f32>\": 8,\n  \"vec3<f32>\": 12,\n  \"vec4<f32>\": 16,\n  \"mat2x2<f32>\": 16 * 2,\n  \"mat3x3<f32>\": 16 * 3,\n  \"mat4x4<f32>\": 16 * 4\n  // TODO - not essential for now but support these in the future\n  // int:      4,\n  // ivec2:    8,\n  // ivec3:    12,\n  // ivec4:    16,\n  // uint:     4,\n  // uvec2:    8,\n  // uvec3:    12,\n  // uvec4:    16,\n  // bool:     4,\n  // bvec2:    8,\n  // bvec3:    12,\n  // bvec4:    16,\n  // mat2:     16 * 2,\n  // mat3:     16 * 3,\n  // mat4:     16 * 4,\n};\nfunction createUboElementsSTD40(uniformData) {\n  const uboElements = uniformData.map((data) => ({\n    data,\n    offset: 0,\n    size: 0\n  }));\n  let size = 0;\n  let chunkSize = 0;\n  let offset = 0;\n  for (let i = 0; i < uboElements.length; i++) {\n    const uboElement = uboElements[i];\n    size = WGSL_TO_STD40_SIZE[uboElement.data.type];\n    if (!size) {\n      throw new Error(`Unknown type ${uboElement.data.type}`);\n    }\n    if (uboElement.data.size > 1) {\n      size = Math.max(size, 16) * uboElement.data.size;\n    }\n    uboElement.size = size;\n    if (chunkSize % size !== 0 && chunkSize < 16) {\n      const lineUpValue = chunkSize % size % 16;\n      chunkSize += lineUpValue;\n      offset += lineUpValue;\n    }\n    if (chunkSize + size > 16) {\n      offset = Math.ceil(offset / 16) * 16;\n      uboElement.offset = offset;\n      offset += size;\n      chunkSize = size;\n    } else {\n      uboElement.offset = offset;\n      chunkSize += size;\n      offset += size;\n    }\n  }\n  offset = Math.ceil(offset / 16) * 16;\n  return { uboElements, size: offset };\n}\n\nexport { WGSL_TO_STD40_SIZE, createUboElementsSTD40 };\n//# sourceMappingURL=createUboElementsSTD40.mjs.map\n","import { WGSL_TO_STD40_SIZE } from './createUboElementsSTD40.mjs';\n\n\"use strict\";\nfunction generateArraySyncSTD40(uboElement, offsetToAdd) {\n  const rowSize = Math.max(WGSL_TO_STD40_SIZE[uboElement.data.type] / 16, 1);\n  const elementSize = uboElement.data.value.length / uboElement.data.size;\n  const remainder = (4 - elementSize % 4) % 4;\n  return `\n        v = uv.${uboElement.data.name};\n        offset += ${offsetToAdd};\n\n        arrayOffset = offset;\n\n        t = 0;\n\n        for(var i=0; i < ${uboElement.data.size * rowSize}; i++)\n        {\n            for(var j = 0; j < ${elementSize}; j++)\n            {\n                data[arrayOffset++] = v[t++];\n            }\n            ${remainder !== 0 ? `arrayOffset += ${remainder};` : \"\"}\n        }\n    `;\n}\n\nexport { generateArraySyncSTD40 };\n//# sourceMappingURL=generateArraySyncSTD40.mjs.map\n","import { createUboSyncFunction } from '../../../shared/shader/utils/createUboSyncFunction.mjs';\nimport { uboSyncFunctionsSTD40 } from '../../../shared/shader/utils/uboSyncFunctions.mjs';\nimport { generateArraySyncSTD40 } from './generateArraySyncSTD40.mjs';\n\n\"use strict\";\nfunction createUboSyncFunctionSTD40(uboElements) {\n  return createUboSyncFunction(\n    uboElements,\n    \"uboStd40\",\n    generateArraySyncSTD40,\n    uboSyncFunctionsSTD40\n  );\n}\n\nexport { createUboSyncFunctionSTD40 };\n//# sourceMappingURL=createUboSyncSTD40.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { UboSystem } from '../shared/shader/UboSystem.mjs';\nimport { createUboElementsSTD40 } from './shader/utils/createUboElementsSTD40.mjs';\nimport { createUboSyncFunctionSTD40 } from './shader/utils/createUboSyncSTD40.mjs';\n\n\"use strict\";\nclass GlUboSystem extends UboSystem {\n  constructor() {\n    super({\n      createUboElements: createUboElementsSTD40,\n      generateUboSync: createUboSyncFunctionSTD40\n    });\n  }\n}\n/** @ignore */\nGlUboSystem.extension = {\n  type: [ExtensionType.WebGLSystem],\n  name: \"ubo\"\n};\n\nexport { GlUboSystem };\n//# sourceMappingURL=GlUboSystem.mjs.map\n","\"use strict\";\nclass GlRenderTarget {\n  constructor() {\n    this.width = -1;\n    this.height = -1;\n    this.msaa = false;\n    this.msaaRenderBuffer = [];\n  }\n}\n\nexport { GlRenderTarget };\n//# sourceMappingURL=GlRenderTarget.mjs.map\n","import { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { CLEAR } from '../const.mjs';\nimport { GlRenderTarget } from '../GlRenderTarget.mjs';\n\n\"use strict\";\nclass GlRenderTargetAdaptor {\n  constructor() {\n    this._clearColorCache = [0, 0, 0, 0];\n    this._viewPortCache = new Rectangle();\n  }\n  init(renderer, renderTargetSystem) {\n    this._renderer = renderer;\n    this._renderTargetSystem = renderTargetSystem;\n    renderer.runners.contextChange.add(this);\n  }\n  contextChange() {\n    this._clearColorCache = [0, 0, 0, 0];\n    this._viewPortCache = new Rectangle();\n  }\n  copyToTexture(sourceRenderSurfaceTexture, destinationTexture, originSrc, size, originDest) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const renderer = this._renderer;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(sourceRenderSurfaceTexture);\n    const gl = renderer.gl;\n    this.finishRenderPass(sourceRenderSurfaceTexture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.resolveTargetFramebuffer);\n    renderer.texture.bind(destinationTexture, 0);\n    gl.copyTexSubImage2D(\n      gl.TEXTURE_2D,\n      0,\n      originDest.x,\n      originDest.y,\n      originSrc.x,\n      originSrc.y,\n      size.width,\n      size.height\n    );\n    return destinationTexture;\n  }\n  startRenderPass(renderTarget, clear = true, clearColor, viewport) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const source = renderTarget.colorTexture;\n    const gpuRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    let viewPortY = viewport.y;\n    if (renderTarget.isRoot) {\n      viewPortY = source.pixelHeight - viewport.height;\n    }\n    renderTarget.colorTextures.forEach((texture) => {\n      this._renderer.texture.unbind(texture);\n    });\n    const gl = this._renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, gpuRenderTarget.framebuffer);\n    const viewPortCache = this._viewPortCache;\n    if (viewPortCache.x !== viewport.x || viewPortCache.y !== viewPortY || viewPortCache.width !== viewport.width || viewPortCache.height !== viewport.height) {\n      viewPortCache.x = viewport.x;\n      viewPortCache.y = viewPortY;\n      viewPortCache.width = viewport.width;\n      viewPortCache.height = viewport.height;\n      gl.viewport(\n        viewport.x,\n        viewPortY,\n        viewport.width,\n        viewport.height\n      );\n    }\n    if (!gpuRenderTarget.depthStencilRenderBuffer && (renderTarget.stencil || renderTarget.depth)) {\n      this._initStencil(gpuRenderTarget);\n    }\n    this.clear(renderTarget, clear, clearColor);\n  }\n  finishRenderPass(renderTarget) {\n    const renderTargetSystem = this._renderTargetSystem;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    if (!glRenderTarget.msaa)\n      return;\n    const gl = this._renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.resolveTargetFramebuffer);\n    gl.bindFramebuffer(gl.READ_FRAMEBUFFER, glRenderTarget.framebuffer);\n    gl.blitFramebuffer(\n      0,\n      0,\n      glRenderTarget.width,\n      glRenderTarget.height,\n      0,\n      0,\n      glRenderTarget.width,\n      glRenderTarget.height,\n      gl.COLOR_BUFFER_BIT,\n      gl.NEAREST\n    );\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenderTarget.framebuffer);\n  }\n  initGpuRenderTarget(renderTarget) {\n    const renderer = this._renderer;\n    const gl = renderer.gl;\n    const glRenderTarget = new GlRenderTarget();\n    if (renderTarget.colorTexture.resource === renderer.gl.canvas) {\n      glRenderTarget.framebuffer = null;\n      return glRenderTarget;\n    }\n    this._initColor(renderTarget, glRenderTarget);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    return glRenderTarget;\n  }\n  destroyGpuRenderTarget(gpuRenderTarget) {\n    const gl = this._renderer.gl;\n    if (gpuRenderTarget.framebuffer) {\n      gl.deleteFramebuffer(gpuRenderTarget.framebuffer);\n      gpuRenderTarget.framebuffer = null;\n    }\n    if (gpuRenderTarget.resolveTargetFramebuffer) {\n      gl.deleteFramebuffer(gpuRenderTarget.resolveTargetFramebuffer);\n      gpuRenderTarget.resolveTargetFramebuffer = null;\n    }\n    if (gpuRenderTarget.depthStencilRenderBuffer) {\n      gl.deleteRenderbuffer(gpuRenderTarget.depthStencilRenderBuffer);\n      gpuRenderTarget.depthStencilRenderBuffer = null;\n    }\n    gpuRenderTarget.msaaRenderBuffer.forEach((renderBuffer) => {\n      gl.deleteRenderbuffer(renderBuffer);\n    });\n    gpuRenderTarget.msaaRenderBuffer = null;\n  }\n  clear(_renderTarget, clear, clearColor) {\n    if (!clear)\n      return;\n    const renderTargetSystem = this._renderTargetSystem;\n    if (typeof clear === \"boolean\") {\n      clear = clear ? CLEAR.ALL : CLEAR.NONE;\n    }\n    const gl = this._renderer.gl;\n    if (clear & CLEAR.COLOR) {\n      clearColor ?? (clearColor = renderTargetSystem.defaultClearColor);\n      const clearColorCache = this._clearColorCache;\n      const clearColorArray = clearColor;\n      if (clearColorCache[0] !== clearColorArray[0] || clearColorCache[1] !== clearColorArray[1] || clearColorCache[2] !== clearColorArray[2] || clearColorCache[3] !== clearColorArray[3]) {\n        clearColorCache[0] = clearColorArray[0];\n        clearColorCache[1] = clearColorArray[1];\n        clearColorCache[2] = clearColorArray[2];\n        clearColorCache[3] = clearColorArray[3];\n        gl.clearColor(clearColorArray[0], clearColorArray[1], clearColorArray[2], clearColorArray[3]);\n      }\n    }\n    gl.clear(clear);\n  }\n  resizeGpuRenderTarget(renderTarget) {\n    if (renderTarget.isRoot)\n      return;\n    const renderTargetSystem = this._renderTargetSystem;\n    const glRenderTarget = renderTargetSystem.getGpuRenderTarget(renderTarget);\n    this._resizeColor(renderTarget, glRenderTarget);\n    if (renderTarget.stencil) {\n      this._resizeStencil(glRenderTarget);\n    }\n  }\n  _initColor(renderTarget, glRenderTarget) {\n    const renderer = this._renderer;\n    const gl = renderer.gl;\n    const resolveTargetFramebuffer = gl.createFramebuffer();\n    glRenderTarget.resolveTargetFramebuffer = resolveTargetFramebuffer;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, resolveTargetFramebuffer);\n    glRenderTarget.width = renderTarget.colorTexture.source.pixelWidth;\n    glRenderTarget.height = renderTarget.colorTexture.source.pixelHeight;\n    renderTarget.colorTextures.forEach((colorTexture, i) => {\n      const source = colorTexture.source;\n      if (source.antialias) {\n        if (renderer.context.supports.msaa) {\n          glRenderTarget.msaa = true;\n        } else {\n          warn(\"[RenderTexture] Antialiasing on textures is not supported in WebGL1\");\n        }\n      }\n      renderer.texture.bindSource(source, 0);\n      const glSource = renderer.texture.getGlSource(source);\n      const glTexture = glSource.texture;\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0 + i,\n        3553,\n        // texture.target,\n        glTexture,\n        0\n      );\n    });\n    if (glRenderTarget.msaa) {\n      const viewFramebuffer = gl.createFramebuffer();\n      glRenderTarget.framebuffer = viewFramebuffer;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, viewFramebuffer);\n      renderTarget.colorTextures.forEach((_, i) => {\n        const msaaRenderBuffer = gl.createRenderbuffer();\n        glRenderTarget.msaaRenderBuffer[i] = msaaRenderBuffer;\n      });\n    } else {\n      glRenderTarget.framebuffer = resolveTargetFramebuffer;\n    }\n    this._resizeColor(renderTarget, glRenderTarget);\n  }\n  _resizeColor(renderTarget, glRenderTarget) {\n    const source = renderTarget.colorTexture.source;\n    glRenderTarget.width = source.pixelWidth;\n    glRenderTarget.height = source.pixelHeight;\n    renderTarget.colorTextures.forEach((colorTexture, i) => {\n      if (i === 0)\n        return;\n      colorTexture.source.resize(source.width, source.height, source._resolution);\n    });\n    if (glRenderTarget.msaa) {\n      const renderer = this._renderer;\n      const gl = renderer.gl;\n      const viewFramebuffer = glRenderTarget.framebuffer;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, viewFramebuffer);\n      renderTarget.colorTextures.forEach((colorTexture, i) => {\n        const source2 = colorTexture.source;\n        renderer.texture.bindSource(source2, 0);\n        const glSource = renderer.texture.getGlSource(source2);\n        const glInternalFormat = glSource.internalFormat;\n        const msaaRenderBuffer = glRenderTarget.msaaRenderBuffer[i];\n        gl.bindRenderbuffer(\n          gl.RENDERBUFFER,\n          msaaRenderBuffer\n        );\n        gl.renderbufferStorageMultisample(\n          gl.RENDERBUFFER,\n          4,\n          glInternalFormat,\n          source2.pixelWidth,\n          source2.pixelHeight\n        );\n        gl.framebufferRenderbuffer(\n          gl.FRAMEBUFFER,\n          gl.COLOR_ATTACHMENT0 + i,\n          gl.RENDERBUFFER,\n          msaaRenderBuffer\n        );\n      });\n    }\n  }\n  _initStencil(glRenderTarget) {\n    if (glRenderTarget.framebuffer === null)\n      return;\n    const gl = this._renderer.gl;\n    const depthStencilRenderBuffer = gl.createRenderbuffer();\n    glRenderTarget.depthStencilRenderBuffer = depthStencilRenderBuffer;\n    gl.bindRenderbuffer(\n      gl.RENDERBUFFER,\n      depthStencilRenderBuffer\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_STENCIL_ATTACHMENT,\n      gl.RENDERBUFFER,\n      depthStencilRenderBuffer\n    );\n    this._resizeStencil(glRenderTarget);\n  }\n  _resizeStencil(glRenderTarget) {\n    const gl = this._renderer.gl;\n    gl.bindRenderbuffer(\n      gl.RENDERBUFFER,\n      glRenderTarget.depthStencilRenderBuffer\n    );\n    if (glRenderTarget.msaa) {\n      gl.renderbufferStorageMultisample(\n        gl.RENDERBUFFER,\n        4,\n        gl.DEPTH24_STENCIL8,\n        glRenderTarget.width,\n        glRenderTarget.height\n      );\n    } else {\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        this._renderer.context.webGLVersion === 2 ? gl.DEPTH24_STENCIL8 : gl.DEPTH_STENCIL,\n        glRenderTarget.width,\n        glRenderTarget.height\n      );\n    }\n  }\n}\n\nexport { GlRenderTargetAdaptor };\n//# sourceMappingURL=GlRenderTargetAdaptor.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { RenderTargetSystem } from '../../shared/renderTarget/RenderTargetSystem.mjs';\nimport { GlRenderTargetAdaptor } from './GlRenderTargetAdaptor.mjs';\n\n\"use strict\";\nclass GlRenderTargetSystem extends RenderTargetSystem {\n  constructor(renderer) {\n    super(renderer);\n    this.adaptor = new GlRenderTargetAdaptor();\n    this.adaptor.init(renderer, this);\n  }\n}\n/** @ignore */\nGlRenderTargetSystem.extension = {\n  type: [ExtensionType.WebGLSystem],\n  name: \"renderTarget\"\n};\n\nexport { GlRenderTargetSystem };\n//# sourceMappingURL=GlRenderTargetSystem.mjs.map\n","\"use strict\";\nclass IGLUniformData {\n}\nclass GlProgramData {\n  /**\n   * Makes a new Pixi program.\n   * @param program - webgl program\n   * @param uniformData - uniforms\n   */\n  constructor(program, uniformData) {\n    this.program = program;\n    this.uniformData = uniformData;\n    this.uniformGroups = {};\n    this.uniformDirtyGroups = {};\n    this.uniformBlockBindings = {};\n  }\n  /** Destroys this program. */\n  destroy() {\n    this.uniformData = null;\n    this.uniformGroups = null;\n    this.uniformDirtyGroups = null;\n    this.uniformBlockBindings = null;\n    this.program = null;\n  }\n}\n\nexport { GlProgramData, IGLUniformData };\n//# sourceMappingURL=GlProgramData.mjs.map\n","\"use strict\";\nfunction compileShader(gl, type, src) {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, src);\n  gl.compileShader(shader);\n  return shader;\n}\n\nexport { compileShader };\n//# sourceMappingURL=compileShader.mjs.map\n","\"use strict\";\nfunction booleanArray(size) {\n  const array = new Array(size);\n  for (let i = 0; i < array.length; i++) {\n    array[i] = false;\n  }\n  return array;\n}\nfunction defaultValue(type, size) {\n  switch (type) {\n    case \"float\":\n      return 0;\n    case \"vec2\":\n      return new Float32Array(2 * size);\n    case \"vec3\":\n      return new Float32Array(3 * size);\n    case \"vec4\":\n      return new Float32Array(4 * size);\n    case \"int\":\n    case \"uint\":\n    case \"sampler2D\":\n    case \"sampler2DArray\":\n      return 0;\n    case \"ivec2\":\n      return new Int32Array(2 * size);\n    case \"ivec3\":\n      return new Int32Array(3 * size);\n    case \"ivec4\":\n      return new Int32Array(4 * size);\n    case \"uvec2\":\n      return new Uint32Array(2 * size);\n    case \"uvec3\":\n      return new Uint32Array(3 * size);\n    case \"uvec4\":\n      return new Uint32Array(4 * size);\n    case \"bool\":\n      return false;\n    case \"bvec2\":\n      return booleanArray(2 * size);\n    case \"bvec3\":\n      return booleanArray(3 * size);\n    case \"bvec4\":\n      return booleanArray(4 * size);\n    case \"mat2\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        1\n      ]);\n    case \"mat3\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1\n      ]);\n    case \"mat4\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n  }\n  return null;\n}\n\nexport { defaultValue };\n//# sourceMappingURL=defaultValue.mjs.map\n","\"use strict\";\nlet GL_TABLE = null;\nconst GL_TO_GLSL_TYPES = {\n  FLOAT: \"float\",\n  FLOAT_VEC2: \"vec2\",\n  FLOAT_VEC3: \"vec3\",\n  FLOAT_VEC4: \"vec4\",\n  INT: \"int\",\n  INT_VEC2: \"ivec2\",\n  INT_VEC3: \"ivec3\",\n  INT_VEC4: \"ivec4\",\n  UNSIGNED_INT: \"uint\",\n  UNSIGNED_INT_VEC2: \"uvec2\",\n  UNSIGNED_INT_VEC3: \"uvec3\",\n  UNSIGNED_INT_VEC4: \"uvec4\",\n  BOOL: \"bool\",\n  BOOL_VEC2: \"bvec2\",\n  BOOL_VEC3: \"bvec3\",\n  BOOL_VEC4: \"bvec4\",\n  FLOAT_MAT2: \"mat2\",\n  FLOAT_MAT3: \"mat3\",\n  FLOAT_MAT4: \"mat4\",\n  SAMPLER_2D: \"sampler2D\",\n  INT_SAMPLER_2D: \"sampler2D\",\n  UNSIGNED_INT_SAMPLER_2D: \"sampler2D\",\n  SAMPLER_CUBE: \"samplerCube\",\n  INT_SAMPLER_CUBE: \"samplerCube\",\n  UNSIGNED_INT_SAMPLER_CUBE: \"samplerCube\",\n  SAMPLER_2D_ARRAY: \"sampler2DArray\",\n  INT_SAMPLER_2D_ARRAY: \"sampler2DArray\",\n  UNSIGNED_INT_SAMPLER_2D_ARRAY: \"sampler2DArray\"\n};\nconst GLSL_TO_VERTEX_TYPES = {\n  float: \"float32\",\n  vec2: \"float32x2\",\n  vec3: \"float32x3\",\n  vec4: \"float32x4\",\n  int: \"sint32\",\n  ivec2: \"sint32x2\",\n  ivec3: \"sint32x3\",\n  ivec4: \"sint32x4\",\n  uint: \"uint32\",\n  uvec2: \"uint32x2\",\n  uvec3: \"uint32x3\",\n  uvec4: \"uint32x4\",\n  bool: \"uint32\",\n  bvec2: \"uint32x2\",\n  bvec3: \"uint32x3\",\n  bvec4: \"uint32x4\"\n};\nfunction mapType(gl, type) {\n  if (!GL_TABLE) {\n    const typeNames = Object.keys(GL_TO_GLSL_TYPES);\n    GL_TABLE = {};\n    for (let i = 0; i < typeNames.length; ++i) {\n      const tn = typeNames[i];\n      GL_TABLE[gl[tn]] = GL_TO_GLSL_TYPES[tn];\n    }\n  }\n  return GL_TABLE[type];\n}\nfunction mapGlToVertexFormat(gl, type) {\n  const typeValue = mapType(gl, type);\n  return GLSL_TO_VERTEX_TYPES[typeValue] || \"float32\";\n}\n\nexport { mapGlToVertexFormat, mapType };\n//# sourceMappingURL=mapType.mjs.map\n","\"use strict\";\nfunction logPrettyShaderError(gl, shader) {\n  const shaderSrc = gl.getShaderSource(shader).split(\"\\n\").map((line, index) => `${index}: ${line}`);\n  const shaderLog = gl.getShaderInfoLog(shader);\n  const splitShader = shaderLog.split(\"\\n\");\n  const dedupe = {};\n  const lineNumbers = splitShader.map((line) => parseFloat(line.replace(/^ERROR\\: 0\\:([\\d]+)\\:.*$/, \"$1\"))).filter((n) => {\n    if (n && !dedupe[n]) {\n      dedupe[n] = true;\n      return true;\n    }\n    return false;\n  });\n  const logArgs = [\"\"];\n  lineNumbers.forEach((number) => {\n    shaderSrc[number - 1] = `%c${shaderSrc[number - 1]}%c`;\n    logArgs.push(\"background: #FF0000; color:#FFFFFF; font-size: 10px\", \"font-size: 10px\");\n  });\n  const fragmentSourceToLog = shaderSrc.join(\"\\n\");\n  logArgs[0] = fragmentSourceToLog;\n  console.error(shaderLog);\n  console.groupCollapsed(\"click to view full shader code\");\n  console.warn(...logArgs);\n  console.groupEnd();\n}\nfunction logProgramError(gl, program, vertexShader, fragmentShader) {\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      logPrettyShaderError(gl, vertexShader);\n    }\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      logPrettyShaderError(gl, fragmentShader);\n    }\n    console.error(\"PixiJS Error: Could not initialize shader.\");\n    if (gl.getProgramInfoLog(program) !== \"\") {\n      console.warn(\"PixiJS Warning: gl.getProgramInfoLog()\", gl.getProgramInfoLog(program));\n    }\n  }\n}\n\nexport { logProgramError };\n//# sourceMappingURL=logProgramError.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { generateShaderSyncCode } from './GenerateShaderSyncCode.mjs';\nimport { generateProgram } from './program/generateProgram.mjs';\n\n\"use strict\";\nconst defaultSyncData = {\n  textureCount: 0,\n  blockIndex: 0\n};\nclass GlShaderSystem {\n  constructor(renderer) {\n    /**\n     * @internal\n     * @private\n     */\n    this._activeProgram = null;\n    this._programDataHash = /* @__PURE__ */ Object.create(null);\n    this._nextIndex = 0;\n    this._boundUniformsIdsToIndexHash = /* @__PURE__ */ Object.create(null);\n    this._boundIndexToUniformsHash = /* @__PURE__ */ Object.create(null);\n    this._shaderSyncFunctions = /* @__PURE__ */ Object.create(null);\n    this._renderer = renderer;\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    this._maxBindings = gl.MAX_UNIFORM_BUFFER_BINDINGS ? gl.getParameter(gl.MAX_UNIFORM_BUFFER_BINDINGS) : 0;\n    this._programDataHash = /* @__PURE__ */ Object.create(null);\n    this._boundUniformsIdsToIndexHash = /* @__PURE__ */ Object.create(null);\n    this._boundIndexToUniformsHash = /* @__PURE__ */ Object.create(null);\n    this._activeProgram = null;\n  }\n  /**\n   * Changes the current shader to the one given in parameter.\n   * @param shader - the new shader\n   * @param skipSync - false if the shader should automatically sync its uniforms.\n   * @returns the glProgram that belongs to the shader.\n   */\n  bind(shader, skipSync) {\n    this._setProgram(shader.glProgram);\n    if (skipSync)\n      return;\n    defaultSyncData.textureCount = 0;\n    defaultSyncData.blockIndex = 0;\n    let syncFunction = this._shaderSyncFunctions[shader.glProgram._key];\n    if (!syncFunction) {\n      syncFunction = this._shaderSyncFunctions[shader.glProgram._key] = this._generateShaderSync(shader, this);\n    }\n    syncFunction(this._renderer, shader, defaultSyncData);\n  }\n  /**\n   * Updates the uniform group.\n   * @param uniformGroup - the uniform group to update\n   */\n  updateUniformGroup(uniformGroup) {\n    this._renderer.uniformGroup.updateUniformGroup(uniformGroup, this._activeProgram, defaultSyncData);\n  }\n  /**\n   * Binds a uniform block to the shader.\n   * @param uniformGroup - the uniform group to bind\n   * @param name - the name of the uniform block\n   * @param index - the index of the uniform block\n   */\n  bindUniformBlock(uniformGroup, name, index = 0) {\n    const bufferSystem = this._renderer.buffer;\n    const programData = this._getProgramData(this._activeProgram);\n    const isBufferResource = uniformGroup._bufferResource;\n    if (isBufferResource) {\n      this._renderer.ubo.updateUniformGroup(uniformGroup);\n    }\n    bufferSystem.updateBuffer(uniformGroup.buffer);\n    let boundIndex = this._boundUniformsIdsToIndexHash[uniformGroup.uid];\n    if (boundIndex === void 0) {\n      const nextIndex = this._nextIndex++ % this._maxBindings;\n      const currentBoundUniformGroup = this._boundIndexToUniformsHash[nextIndex];\n      if (currentBoundUniformGroup) {\n        this._boundUniformsIdsToIndexHash[currentBoundUniformGroup.uid] = void 0;\n      }\n      boundIndex = this._boundUniformsIdsToIndexHash[uniformGroup.uid] = nextIndex;\n      this._boundIndexToUniformsHash[nextIndex] = uniformGroup;\n      if (isBufferResource) {\n        bufferSystem.bindBufferRange(uniformGroup.buffer, nextIndex, uniformGroup.offset);\n      } else {\n        bufferSystem.bindBufferBase(uniformGroup.buffer, nextIndex);\n      }\n    }\n    const gl = this._gl;\n    const uniformBlockIndex = this._activeProgram._uniformBlockData[name].index;\n    if (programData.uniformBlockBindings[index] === boundIndex)\n      return;\n    programData.uniformBlockBindings[index] = boundIndex;\n    gl.uniformBlockBinding(programData.program, uniformBlockIndex, boundIndex);\n  }\n  _setProgram(program) {\n    if (this._activeProgram === program)\n      return;\n    this._activeProgram = program;\n    const programData = this._getProgramData(program);\n    this._gl.useProgram(programData.program);\n  }\n  /**\n   * @param program - the program to get the data for\n   * @internal\n   * @private\n   */\n  _getProgramData(program) {\n    return this._programDataHash[program._key] || this._createProgramData(program);\n  }\n  _createProgramData(program) {\n    const key = program._key;\n    this._programDataHash[key] = generateProgram(this._gl, program);\n    return this._programDataHash[key];\n  }\n  destroy() {\n    for (const key of Object.keys(this._programDataHash)) {\n      const programData = this._programDataHash[key];\n      programData.destroy();\n      this._programDataHash[key] = null;\n    }\n    this._programDataHash = null;\n    this._boundUniformsIdsToIndexHash = null;\n  }\n  /**\n   * Creates a function that can be executed that will sync the shader as efficiently as possible.\n   * Overridden by the unsafe eval package if you don't want eval used in your project.\n   * @param shader - the shader to generate the sync function for\n   * @param shaderSystem - the shader system to use\n   * @returns - the generated sync function\n   * @ignore\n   */\n  _generateShaderSync(shader, shaderSystem) {\n    return generateShaderSyncCode(shader, shaderSystem);\n  }\n}\n/** @ignore */\nGlShaderSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"shader\"\n};\n\nexport { GlShaderSystem };\n//# sourceMappingURL=GlShaderSystem.mjs.map\n","import { warn } from '../../../../../utils/logging/warn.mjs';\nimport { GlProgramData } from '../GlProgramData.mjs';\nimport { compileShader } from './compileShader.mjs';\nimport { defaultValue } from './defaultValue.mjs';\nimport { extractAttributesFromGlProgram } from './extractAttributesFromGlProgram.mjs';\nimport { getUboData } from './getUboData.mjs';\nimport { getUniformData } from './getUniformData.mjs';\nimport { logProgramError } from './logProgramError.mjs';\n\n\"use strict\";\nfunction generateProgram(gl, program) {\n  const glVertShader = compileShader(gl, gl.VERTEX_SHADER, program.vertex);\n  const glFragShader = compileShader(gl, gl.FRAGMENT_SHADER, program.fragment);\n  const webGLProgram = gl.createProgram();\n  gl.attachShader(webGLProgram, glVertShader);\n  gl.attachShader(webGLProgram, glFragShader);\n  const transformFeedbackVaryings = program.transformFeedbackVaryings;\n  if (transformFeedbackVaryings) {\n    if (typeof gl.transformFeedbackVaryings !== \"function\") {\n      warn(`TransformFeedback is not supported but TransformFeedbackVaryings are given.`);\n    } else {\n      gl.transformFeedbackVaryings(\n        webGLProgram,\n        transformFeedbackVaryings.names,\n        transformFeedbackVaryings.bufferMode === \"separate\" ? gl.SEPARATE_ATTRIBS : gl.INTERLEAVED_ATTRIBS\n      );\n    }\n  }\n  gl.linkProgram(webGLProgram);\n  if (!gl.getProgramParameter(webGLProgram, gl.LINK_STATUS)) {\n    logProgramError(gl, webGLProgram, glVertShader, glFragShader);\n  }\n  program._attributeData = extractAttributesFromGlProgram(\n    webGLProgram,\n    gl,\n    !/^[ \\t]*#[ \\t]*version[ \\t]+300[ \\t]+es[ \\t]*$/m.test(program.vertex)\n  );\n  program._uniformData = getUniformData(webGLProgram, gl);\n  program._uniformBlockData = getUboData(webGLProgram, gl);\n  gl.deleteShader(glVertShader);\n  gl.deleteShader(glFragShader);\n  const uniformData = {};\n  for (const i in program._uniformData) {\n    const data = program._uniformData[i];\n    uniformData[i] = {\n      location: gl.getUniformLocation(webGLProgram, i),\n      value: defaultValue(data.type, data.size)\n    };\n  }\n  const glProgram = new GlProgramData(webGLProgram, uniformData);\n  return glProgram;\n}\n\nexport { generateProgram };\n//# sourceMappingURL=generateProgram.mjs.map\n","import { getAttributeInfoFromFormat } from '../../../shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nimport { mapGlToVertexFormat } from './mapType.mjs';\n\n\"use strict\";\nfunction extractAttributesFromGlProgram(program, gl, sortAttributes = false) {\n  const attributes = {};\n  const totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < totalAttributes; i++) {\n    const attribData = gl.getActiveAttrib(program, i);\n    if (attribData.name.startsWith(\"gl_\")) {\n      continue;\n    }\n    const format = mapGlToVertexFormat(gl, attribData.type);\n    attributes[attribData.name] = {\n      location: 0,\n      // set further down..\n      format,\n      stride: getAttributeInfoFromFormat(format).stride,\n      offset: 0,\n      instance: false,\n      start: 0\n    };\n  }\n  const keys = Object.keys(attributes);\n  if (sortAttributes) {\n    keys.sort((a, b) => a > b ? 1 : -1);\n    for (let i = 0; i < keys.length; i++) {\n      attributes[keys[i]].location = i;\n      gl.bindAttribLocation(program, i, keys[i]);\n    }\n    gl.linkProgram(program);\n  } else {\n    for (let i = 0; i < keys.length; i++) {\n      attributes[keys[i]].location = gl.getAttribLocation(program, keys[i]);\n    }\n  }\n  return attributes;\n}\n\nexport { extractAttributesFromGlProgram };\n//# sourceMappingURL=extractAttributesFromGlProgram.mjs.map\n","import { defaultValue } from './defaultValue.mjs';\nimport { mapType } from './mapType.mjs';\n\n\"use strict\";\nfunction getUniformData(program, gl) {\n  const uniforms = {};\n  const totalUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (let i = 0; i < totalUniforms; i++) {\n    const uniformData = gl.getActiveUniform(program, i);\n    const name = uniformData.name.replace(/\\[.*?\\]$/, \"\");\n    const isArray = !!uniformData.name.match(/\\[.*?\\]$/);\n    const type = mapType(gl, uniformData.type);\n    uniforms[name] = {\n      name,\n      index: i,\n      type,\n      size: uniformData.size,\n      isArray,\n      value: defaultValue(type, uniformData.size)\n    };\n  }\n  return uniforms;\n}\n\nexport { getUniformData };\n//# sourceMappingURL=getUniformData.mjs.map\n","\"use strict\";\nfunction getUboData(program, gl) {\n  if (!gl.ACTIVE_UNIFORM_BLOCKS)\n    return {};\n  const uniformBlocks = {};\n  const totalUniformsBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n  for (let i = 0; i < totalUniformsBlocks; i++) {\n    const name = gl.getActiveUniformBlockName(program, i);\n    const uniformBlockIndex = gl.getUniformBlockIndex(program, name);\n    const size = gl.getActiveUniformBlockParameter(program, i, gl.UNIFORM_BLOCK_DATA_SIZE);\n    uniformBlocks[name] = {\n      name,\n      index: uniformBlockIndex,\n      size\n    };\n  }\n  return uniformBlocks;\n}\n\nexport { getUboData };\n//# sourceMappingURL=getUboData.mjs.map\n","import { BufferResource } from '../../shared/buffer/BufferResource.mjs';\nimport { UniformGroup } from '../../shared/shader/UniformGroup.mjs';\nimport { TextureSource } from '../../shared/texture/sources/TextureSource.mjs';\n\n\"use strict\";\nfunction generateShaderSyncCode(shader, shaderSystem) {\n  const funcFragments = [];\n  const headerFragments = [`\n        var g = s.groups;\n        var sS = r.shader;\n        var p = s.glProgram;\n        var ugS = r.uniformGroup;\n        var resources;\n    `];\n  let addedTextreSystem = false;\n  let blockIndex = 0;\n  let textureCount = 0;\n  const programData = shaderSystem._getProgramData(shader.glProgram);\n  for (const i in shader.groups) {\n    const group = shader.groups[i];\n    funcFragments.push(`\n            resources = g[${i}].resources;\n        `);\n    for (const j in group.resources) {\n      const resource = group.resources[j];\n      if (resource instanceof UniformGroup) {\n        if (resource.ubo) {\n          funcFragments.push(`\n                        sS.bindUniformBlock(\n                            resources[${j}],\n                            sS._uniformBindMap[${i}[${j}],\n                            ${blockIndex++}\n                        );\n                    `);\n        } else {\n          funcFragments.push(`\n                        ugS.updateUniformGroup(resources[${j}], p, sD);\n                    `);\n        }\n      } else if (resource instanceof BufferResource) {\n        funcFragments.push(`\n                    sS.bindUniformBlock(\n                        resources[${j}],\n                        sS._uniformBindMap[${i}[${j}],\n                        ${blockIndex++}\n                    );\n                `);\n      } else if (resource instanceof TextureSource) {\n        const uniformName = shader._uniformBindMap[i][j];\n        const uniformData = programData.uniformData[uniformName];\n        if (uniformData) {\n          if (!addedTextreSystem) {\n            addedTextreSystem = true;\n            headerFragments.push(`\n                        var tS = r.texture;\n                        `);\n          }\n          shaderSystem._gl.uniform1i(uniformData.location, textureCount);\n          funcFragments.push(`\n                        tS.bind(resources[${j}], ${textureCount});\n                    `);\n          textureCount++;\n        }\n      }\n    }\n  }\n  const functionSource = [...headerFragments, ...funcFragments].join(\"\\n\");\n  return new Function(\"r\", \"s\", \"sD\", functionSource);\n}\n\nexport { generateShaderSyncCode };\n//# sourceMappingURL=GenerateShaderSyncCode.mjs.map\n","\"use strict\";\nconst UNIFORM_TO_SINGLE_SETTERS = {\n  f32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1f(location, v);\n        }`,\n  \"vec2<f32>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2f(location, v[0], v[1]);\n        }`,\n  \"vec3<f32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3f(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<f32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4f(location, v[0], v[1], v[2], v[3]);\n        }`,\n  i32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1i(location, v);\n        }`,\n  \"vec2<i32>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2i(location, v[0], v[1]);\n        }`,\n  \"vec3<i32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3i(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<i32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4i(location, v[0], v[1], v[2], v[3]);\n        }`,\n  u32: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1ui(location, v);\n        }`,\n  \"vec2<u32>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2ui(location, v[0], v[1]);\n        }`,\n  \"vec3<u32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3ui(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<u32>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4ui(location, v[0], v[1], v[2], v[3]);\n        }`,\n  bool: `if (cv !== v) {\n            cu.value = v;\n            gl.uniform1i(location, v);\n        }`,\n  \"vec2<bool>\": `if (cv[0] !== v[0] || cv[1] !== v[1]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            gl.uniform2i(location, v[0], v[1]);\n        }`,\n  \"vec3<bool>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            gl.uniform3i(location, v[0], v[1], v[2]);\n        }`,\n  \"vec4<bool>\": `if (cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3]) {\n            cv[0] = v[0];\n            cv[1] = v[1];\n            cv[2] = v[2];\n            cv[3] = v[3];\n            gl.uniform4i(location, v[0], v[1], v[2], v[3]);\n        }`,\n  \"mat2x2<f32>\": `gl.uniformMatrix2fv(location, false, v);`,\n  \"mat3x3<f32>\": `gl.uniformMatrix3fv(location, false, v);`,\n  \"mat4x4<f32>\": `gl.uniformMatrix4fv(location, false, v);`\n};\nconst UNIFORM_TO_ARRAY_SETTERS = {\n  f32: `gl.uniform1fv(location, v);`,\n  \"vec2<f32>\": `gl.uniform2fv(location, v);`,\n  \"vec3<f32>\": `gl.uniform3fv(location, v);`,\n  \"vec4<f32>\": `gl.uniform4fv(location, v);`,\n  \"mat2x2<f32>\": `gl.uniformMatrix2fv(location, false, v);`,\n  \"mat3x3<f32>\": `gl.uniformMatrix3fv(location, false, v);`,\n  \"mat4x4<f32>\": `gl.uniformMatrix4fv(location, false, v);`,\n  i32: `gl.uniform1iv(location, v);`,\n  \"vec2<i32>\": `gl.uniform2iv(location, v);`,\n  \"vec3<i32>\": `gl.uniform3iv(location, v);`,\n  \"vec4<i32>\": `gl.uniform4iv(location, v);`,\n  u32: `gl.uniform1iv(location, v);`,\n  \"vec2<u32>\": `gl.uniform2iv(location, v);`,\n  \"vec3<u32>\": `gl.uniform3iv(location, v);`,\n  \"vec4<u32>\": `gl.uniform4iv(location, v);`,\n  bool: `gl.uniform1iv(location, v);`,\n  \"vec2<bool>\": `gl.uniform2iv(location, v);`,\n  \"vec3<bool>\": `gl.uniform3iv(location, v);`,\n  \"vec4<bool>\": `gl.uniform4iv(location, v);`\n};\n\nexport { UNIFORM_TO_ARRAY_SETTERS, UNIFORM_TO_SINGLE_SETTERS };\n//# sourceMappingURL=generateUniformsSyncTypes.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { generateUniformsSync } from './utils/generateUniformsSync.mjs';\n\n\"use strict\";\nclass GlUniformGroupSystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    /** Cache to holds the generated functions. Stored against UniformObjects unique signature. */\n    this._cache = {};\n    this._uniformGroupSyncHash = {};\n    this._renderer = renderer;\n    this.gl = null;\n    this._cache = {};\n  }\n  contextChange(gl) {\n    this.gl = gl;\n  }\n  /**\n   * Uploads the uniforms values to the currently bound shader.\n   * @param group - the uniforms values that be applied to the current shader\n   * @param program\n   * @param syncData\n   * @param syncData.textureCount\n   */\n  updateUniformGroup(group, program, syncData) {\n    const programData = this._renderer.shader._getProgramData(program);\n    if (!group.isStatic || group._dirtyId !== programData.uniformDirtyGroups[group.uid]) {\n      programData.uniformDirtyGroups[group.uid] = group._dirtyId;\n      const syncFunc = this._getUniformSyncFunction(group, program);\n      syncFunc(programData.uniformData, group.uniforms, this._renderer, syncData);\n    }\n  }\n  /**\n   * Overrideable by the pixi.js/unsafe-eval package to use static syncUniforms instead.\n   * @param group\n   * @param program\n   */\n  _getUniformSyncFunction(group, program) {\n    return this._uniformGroupSyncHash[group._signature]?.[program._key] || this._createUniformSyncFunction(group, program);\n  }\n  _createUniformSyncFunction(group, program) {\n    const uniformGroupSyncHash = this._uniformGroupSyncHash[group._signature] || (this._uniformGroupSyncHash[group._signature] = {});\n    const id = this._getSignature(group, program._uniformData, \"u\");\n    if (!this._cache[id]) {\n      this._cache[id] = this._generateUniformsSync(group, program._uniformData);\n    }\n    uniformGroupSyncHash[program._key] = this._cache[id];\n    return uniformGroupSyncHash[program._key];\n  }\n  _generateUniformsSync(group, uniformData) {\n    return generateUniformsSync(group, uniformData);\n  }\n  /**\n   * Takes a uniform group and data and generates a unique signature for them.\n   * @param group - The uniform group to get signature of\n   * @param group.uniforms\n   * @param uniformData - Uniform information generated by the shader\n   * @param preFix\n   * @returns Unique signature of the uniform group\n   */\n  _getSignature(group, uniformData, preFix) {\n    const uniforms = group.uniforms;\n    const strings = [`${preFix}-`];\n    for (const i in uniforms) {\n      strings.push(i);\n      if (uniformData[i]) {\n        strings.push(uniformData[i].type);\n      }\n    }\n    return strings.join(\"-\");\n  }\n  /** Destroys this System and removes all its textures. */\n  destroy() {\n    this._renderer = null;\n    this._cache = null;\n  }\n}\n/** @ignore */\nGlUniformGroupSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"uniformGroup\"\n};\n\nexport { GlUniformGroupSystem };\n//# sourceMappingURL=GlUniformGroupSystem.mjs.map\n","import { BufferResource } from '../../../shared/buffer/BufferResource.mjs';\nimport { UniformGroup } from '../../../shared/shader/UniformGroup.mjs';\nimport { uniformParsers } from '../../../shared/shader/utils/uniformParsers.mjs';\nimport { UNIFORM_TO_SINGLE_SETTERS, UNIFORM_TO_ARRAY_SETTERS } from './generateUniformsSyncTypes.mjs';\n\n\"use strict\";\nfunction generateUniformsSync(group, uniformData) {\n  const funcFragments = [`\n        var v = null;\n        var cv = null;\n        var cu = null;\n        var t = 0;\n        var gl = renderer.gl;\n        var name = null;\n    `];\n  for (const i in group.uniforms) {\n    if (!uniformData[i]) {\n      if (group.uniforms[i] instanceof UniformGroup) {\n        if (group.uniforms[i].ubo) {\n          funcFragments.push(`\n                        renderer.shader.bindUniformBlock(uv.${i}, \"${i}\");\n                    `);\n        } else {\n          funcFragments.push(`\n                        renderer.shader.updateUniformGroup(uv.${i});\n                    `);\n        }\n      } else if (group.uniforms[i] instanceof BufferResource) {\n        funcFragments.push(`\n                        renderer.shader.bindBufferResource(uv.${i}, \"${i}\");\n                    `);\n      }\n      continue;\n    }\n    const uniform = group.uniformStructures[i];\n    let parsed = false;\n    for (let j = 0; j < uniformParsers.length; j++) {\n      const parser = uniformParsers[j];\n      if (uniform.type === parser.type && parser.test(uniform)) {\n        funcFragments.push(`name = \"${i}\";`, uniformParsers[j].uniform);\n        parsed = true;\n        break;\n      }\n    }\n    if (!parsed) {\n      const templateType = uniform.size === 1 ? UNIFORM_TO_SINGLE_SETTERS : UNIFORM_TO_ARRAY_SETTERS;\n      const template = templateType[uniform.type].replace(\"location\", `ud[\"${i}\"].location`);\n      funcFragments.push(`\n            cu = ud[\"${i}\"];\n            cv = cu.value;\n            v = uv[\"${i}\"];\n            ${template};`);\n    }\n  }\n  return new Function(\"ud\", \"uv\", \"renderer\", \"syncData\", funcFragments.join(\"\\n\"));\n}\n\nexport { generateUniformsSync };\n//# sourceMappingURL=generateUniformsSync.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { State } from '../../shared/state/State.mjs';\nimport { mapWebGLBlendModesToPixi } from './mapWebGLBlendModesToPixi.mjs';\n\n\"use strict\";\nconst BLEND = 0;\nconst OFFSET = 1;\nconst CULLING = 2;\nconst DEPTH_TEST = 3;\nconst WINDING = 4;\nconst DEPTH_MASK = 5;\nconst _GlStateSystem = class _GlStateSystem {\n  constructor() {\n    this.gl = null;\n    this.stateId = 0;\n    this.polygonOffset = 0;\n    this.blendMode = \"none\";\n    this._blendEq = false;\n    this.map = [];\n    this.map[BLEND] = this.setBlend;\n    this.map[OFFSET] = this.setOffset;\n    this.map[CULLING] = this.setCullFace;\n    this.map[DEPTH_TEST] = this.setDepthTest;\n    this.map[WINDING] = this.setFrontFace;\n    this.map[DEPTH_MASK] = this.setDepthMask;\n    this.checks = [];\n    this.defaultState = State.for2d();\n  }\n  contextChange(gl) {\n    this.gl = gl;\n    this.blendModesMap = mapWebGLBlendModesToPixi(gl);\n    this.reset();\n  }\n  /**\n   * Sets the current state\n   * @param {*} state - The state to set.\n   */\n  set(state) {\n    state = state || this.defaultState;\n    if (this.stateId !== state.data) {\n      let diff = this.stateId ^ state.data;\n      let i = 0;\n      while (diff) {\n        if (diff & 1) {\n          this.map[i].call(this, !!(state.data & 1 << i));\n        }\n        diff = diff >> 1;\n        i++;\n      }\n      this.stateId = state.data;\n    }\n    for (let i = 0; i < this.checks.length; i++) {\n      this.checks[i](this, state);\n    }\n  }\n  /**\n   * Sets the state, when previous state is unknown.\n   * @param {*} state - The state to set\n   */\n  forceState(state) {\n    state = state || this.defaultState;\n    for (let i = 0; i < this.map.length; i++) {\n      this.map[i].call(this, !!(state.data & 1 << i));\n    }\n    for (let i = 0; i < this.checks.length; i++) {\n      this.checks[i](this, state);\n    }\n    this.stateId = state.data;\n  }\n  /**\n   * Sets whether to enable or disable blending.\n   * @param value - Turn on or off WebGl blending.\n   */\n  setBlend(value) {\n    this._updateCheck(_GlStateSystem._checkBlendMode, value);\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.BLEND);\n  }\n  /**\n   * Sets whether to enable or disable polygon offset fill.\n   * @param value - Turn on or off webgl polygon offset testing.\n   */\n  setOffset(value) {\n    this._updateCheck(_GlStateSystem._checkPolygonOffset, value);\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.POLYGON_OFFSET_FILL);\n  }\n  /**\n   * Sets whether to enable or disable depth test.\n   * @param value - Turn on or off webgl depth testing.\n   */\n  setDepthTest(value) {\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.DEPTH_TEST);\n  }\n  /**\n   * Sets whether to enable or disable depth mask.\n   * @param value - Turn on or off webgl depth mask.\n   */\n  setDepthMask(value) {\n    this.gl.depthMask(value);\n  }\n  /**\n   * Sets whether to enable or disable cull face.\n   * @param {boolean} value - Turn on or off webgl cull face.\n   */\n  setCullFace(value) {\n    this.gl[value ? \"enable\" : \"disable\"](this.gl.CULL_FACE);\n  }\n  /**\n   * Sets the gl front face.\n   * @param {boolean} value - true is clockwise and false is counter-clockwise\n   */\n  setFrontFace(value) {\n    this.gl.frontFace(this.gl[value ? \"CW\" : \"CCW\"]);\n  }\n  /**\n   * Sets the blend mode.\n   * @param {number} value - The blend mode to set to.\n   */\n  setBlendMode(value) {\n    if (!this.blendModesMap[value]) {\n      value = \"normal\";\n    }\n    if (value === this.blendMode) {\n      return;\n    }\n    this.blendMode = value;\n    const mode = this.blendModesMap[value];\n    const gl = this.gl;\n    if (mode.length === 2) {\n      gl.blendFunc(mode[0], mode[1]);\n    } else {\n      gl.blendFuncSeparate(mode[0], mode[1], mode[2], mode[3]);\n    }\n    if (mode.length === 6) {\n      this._blendEq = true;\n      gl.blendEquationSeparate(mode[4], mode[5]);\n    } else if (this._blendEq) {\n      this._blendEq = false;\n      gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n    }\n  }\n  /**\n   * Sets the polygon offset.\n   * @param {number} value - the polygon offset\n   * @param {number} scale - the polygon offset scale\n   */\n  setPolygonOffset(value, scale) {\n    this.gl.polygonOffset(value, scale);\n  }\n  // used\n  /** Resets all the logic and disables the VAOs. */\n  reset() {\n    this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, false);\n    this.forceState(this.defaultState);\n    this._blendEq = true;\n    this.blendMode = \"\";\n    this.setBlendMode(\"normal\");\n  }\n  /**\n   * Checks to see which updates should be checked based on which settings have been activated.\n   *\n   * For example, if blend is enabled then we should check the blend modes each time the state is changed\n   * or if polygon fill is activated then we need to check if the polygon offset changes.\n   * The idea is that we only check what we have too.\n   * @param func - the checking function to add or remove\n   * @param value - should the check function be added or removed.\n   */\n  _updateCheck(func, value) {\n    const index = this.checks.indexOf(func);\n    if (value && index === -1) {\n      this.checks.push(func);\n    } else if (!value && index !== -1) {\n      this.checks.splice(index, 1);\n    }\n  }\n  /**\n   * A private little wrapper function that we call to check the blend mode.\n   * @param system - the System to perform the state check on\n   * @param state - the state that the blendMode will pulled from\n   */\n  static _checkBlendMode(system, state) {\n    system.setBlendMode(state.blendMode);\n  }\n  /**\n   * A private little wrapper function that we call to check the polygon offset.\n   * @param system - the System to perform the state check on\n   * @param state - the state that the blendMode will pulled from\n   */\n  static _checkPolygonOffset(system, state) {\n    system.setPolygonOffset(1, state.polygonOffset);\n  }\n  /**\n   * @ignore\n   */\n  destroy() {\n    this.gl = null;\n    this.checks.length = 0;\n  }\n};\n/** @ignore */\n_GlStateSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"state\"\n};\nlet GlStateSystem = _GlStateSystem;\n\nexport { GlStateSystem };\n//# sourceMappingURL=GlStateSystem.mjs.map\n","\"use strict\";\nfunction mapWebGLBlendModesToPixi(gl) {\n  const blendMap = {};\n  blendMap.normal = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.add = [gl.ONE, gl.ONE];\n  blendMap.multiply = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.screen = [gl.ONE, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.none = [0, 0];\n  blendMap[\"normal-npm\"] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap[\"add-npm\"] = [gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE];\n  blendMap[\"screen-npm\"] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  blendMap.erase = [gl.ZERO, gl.ONE_MINUS_SRC_ALPHA];\n  return blendMap;\n}\n\nexport { mapWebGLBlendModesToPixi };\n//# sourceMappingURL=mapWebGLBlendModesToPixi.mjs.map\n","import { GL_TARGETS, GL_TYPES, GL_FORMATS } from './const.mjs';\n\n\"use strict\";\nclass GlTexture {\n  constructor(texture) {\n    this.target = GL_TARGETS.TEXTURE_2D;\n    this.texture = texture;\n    this.width = -1;\n    this.height = -1;\n    this.type = GL_TYPES.UNSIGNED_BYTE;\n    this.internalFormat = GL_FORMATS.RGBA;\n    this.format = GL_FORMATS.RGBA;\n    this.samplerType = 0;\n  }\n}\n\nexport { GlTexture };\n//# sourceMappingURL=GlTexture.mjs.map\n","\"use strict\";\nconst glUploadBufferImageResource = {\n  id: \"buffer\",\n  upload(source, glTexture, gl) {\n    if (glTexture.width === source.width || glTexture.height === source.height) {\n      gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,\n        0,\n        0,\n        source.width,\n        source.height,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        source.width,\n        source.height,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    }\n    glTexture.width = source.width;\n    glTexture.height = source.height;\n  }\n};\n\nexport { glUploadBufferImageResource };\n//# sourceMappingURL=glUploadBufferImageResource.mjs.map\n","\"use strict\";\nconst compressedFormatMap = {\n  \"bc1-rgba-unorm\": true,\n  \"bc1-rgba-unorm-srgb\": true,\n  \"bc2-rgba-unorm\": true,\n  \"bc2-rgba-unorm-srgb\": true,\n  \"bc3-rgba-unorm\": true,\n  \"bc3-rgba-unorm-srgb\": true,\n  \"bc4-r-unorm\": true,\n  \"bc4-r-snorm\": true,\n  \"bc5-rg-unorm\": true,\n  \"bc5-rg-snorm\": true,\n  \"bc6h-rgb-ufloat\": true,\n  \"bc6h-rgb-float\": true,\n  \"bc7-rgba-unorm\": true,\n  \"bc7-rgba-unorm-srgb\": true,\n  // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  \"etc2-rgb8unorm\": true,\n  \"etc2-rgb8unorm-srgb\": true,\n  \"etc2-rgb8a1unorm\": true,\n  \"etc2-rgb8a1unorm-srgb\": true,\n  \"etc2-rgba8unorm\": true,\n  \"etc2-rgba8unorm-srgb\": true,\n  \"eac-r11unorm\": true,\n  \"eac-r11snorm\": true,\n  \"eac-rg11unorm\": true,\n  \"eac-rg11snorm\": true,\n  // ASTC compressed formats usable if \"texture-compression-astc\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  \"astc-4x4-unorm\": true,\n  \"astc-4x4-unorm-srgb\": true,\n  \"astc-5x4-unorm\": true,\n  \"astc-5x4-unorm-srgb\": true,\n  \"astc-5x5-unorm\": true,\n  \"astc-5x5-unorm-srgb\": true,\n  \"astc-6x5-unorm\": true,\n  \"astc-6x5-unorm-srgb\": true,\n  \"astc-6x6-unorm\": true,\n  \"astc-6x6-unorm-srgb\": true,\n  \"astc-8x5-unorm\": true,\n  \"astc-8x5-unorm-srgb\": true,\n  \"astc-8x6-unorm\": true,\n  \"astc-8x6-unorm-srgb\": true,\n  \"astc-8x8-unorm\": true,\n  \"astc-8x8-unorm-srgb\": true,\n  \"astc-10x5-unorm\": true,\n  \"astc-10x5-unorm-srgb\": true,\n  \"astc-10x6-unorm\": true,\n  \"astc-10x6-unorm-srgb\": true,\n  \"astc-10x8-unorm\": true,\n  \"astc-10x8-unorm-srgb\": true,\n  \"astc-10x10-unorm\": true,\n  \"astc-10x10-unorm-srgb\": true,\n  \"astc-12x10-unorm\": true,\n  \"astc-12x10-unorm-srgb\": true,\n  \"astc-12x12-unorm\": true,\n  \"astc-12x12-unorm-srgb\": true\n};\nconst glUploadCompressedTextureResource = {\n  id: \"compressed\",\n  upload(source, glTexture, gl) {\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    let mipWidth = source.pixelWidth;\n    let mipHeight = source.pixelHeight;\n    const compressed = !!compressedFormatMap[source.format];\n    for (let i = 0; i < source.resource.length; i++) {\n      const levelBuffer = source.resource[i];\n      if (compressed) {\n        gl.compressedTexImage2D(\n          gl.TEXTURE_2D,\n          i,\n          glTexture.internalFormat,\n          mipWidth,\n          mipHeight,\n          0,\n          levelBuffer\n        );\n      } else {\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          i,\n          glTexture.internalFormat,\n          mipWidth,\n          mipHeight,\n          0,\n          glTexture.format,\n          glTexture.type,\n          levelBuffer\n        );\n      }\n      mipWidth = Math.max(mipWidth >> 1, 1);\n      mipHeight = Math.max(mipHeight >> 1, 1);\n    }\n  }\n};\n\nexport { glUploadCompressedTextureResource };\n//# sourceMappingURL=glUploadCompressedTextureResource.mjs.map\n","\"use strict\";\nconst glUploadImageResource = {\n  id: \"image\",\n  upload(source, glTexture, gl, webGLVersion) {\n    const premultipliedAlpha = source.alphaMode === \"premultiply-alpha-on-upload\";\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, premultipliedAlpha);\n    const glWidth = glTexture.width;\n    const glHeight = glTexture.height;\n    const textureWidth = source.pixelWidth;\n    const textureHeight = source.pixelHeight;\n    const resourceWidth = source.resourceWidth;\n    const resourceHeight = source.resourceHeight;\n    if (resourceWidth < textureWidth || resourceHeight < textureHeight) {\n      if (glWidth !== textureWidth || glHeight !== textureHeight) {\n        gl.texImage2D(\n          glTexture.target,\n          0,\n          glTexture.internalFormat,\n          textureWidth,\n          textureHeight,\n          0,\n          glTexture.format,\n          glTexture.type,\n          null\n        );\n      }\n      if (webGLVersion === 2) {\n        gl.texSubImage2D(\n          gl.TEXTURE_2D,\n          0,\n          0,\n          0,\n          resourceWidth,\n          resourceHeight,\n          glTexture.format,\n          glTexture.type,\n          source.resource\n        );\n      } else {\n        gl.texSubImage2D(\n          gl.TEXTURE_2D,\n          0,\n          0,\n          0,\n          glTexture.format,\n          glTexture.type,\n          source.resource\n        );\n      }\n    } else if (glWidth === textureWidth || glHeight === textureHeight) {\n      gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,\n        0,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else if (webGLVersion === 2) {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        textureWidth,\n        textureHeight,\n        0,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    } else {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        glTexture.format,\n        glTexture.type,\n        source.resource\n      );\n    }\n    glTexture.width = textureWidth;\n    glTexture.height = textureHeight;\n  }\n};\n\nexport { glUploadImageResource };\n//# sourceMappingURL=glUploadImageResource.mjs.map\n","import { glUploadImageResource } from './glUploadImageResource.mjs';\n\n\"use strict\";\nconst glUploadVideoResource = {\n  id: \"video\",\n  upload(source, glTexture, gl, webGLVersion) {\n    if (!source.isValid) {\n      gl.texImage2D(\n        glTexture.target,\n        0,\n        glTexture.internalFormat,\n        1,\n        1,\n        0,\n        glTexture.format,\n        glTexture.type,\n        null\n      );\n      return;\n    }\n    glUploadImageResource.upload(source, glTexture, gl, webGLVersion);\n  }\n};\n\nexport { glUploadVideoResource };\n//# sourceMappingURL=glUploadVideoResource.mjs.map\n","\"use strict\";\nconst scaleModeToGlFilter = {\n  linear: 9729,\n  nearest: 9728\n};\nconst mipmapScaleModeToGlFilter = {\n  linear: {\n    linear: 9987,\n    nearest: 9985\n  },\n  nearest: {\n    linear: 9986,\n    nearest: 9984\n  }\n};\nconst wrapModeToGlAddress = {\n  \"clamp-to-edge\": 33071,\n  repeat: 10497,\n  \"mirror-repeat\": 33648\n};\nconst compareModeToGlCompare = {\n  never: 512,\n  less: 513,\n  equal: 514,\n  \"less-equal\": 515,\n  greater: 516,\n  \"not-equal\": 517,\n  \"greater-equal\": 518,\n  always: 519\n};\n\nexport { compareModeToGlCompare, mipmapScaleModeToGlFilter, scaleModeToGlFilter, wrapModeToGlAddress };\n//# sourceMappingURL=pixiToGlMaps.mjs.map\n","import { wrapModeToGlAddress, scaleModeToGlFilter, mipmapScaleModeToGlFilter, compareModeToGlCompare } from './pixiToGlMaps.mjs';\n\n\"use strict\";\nfunction applyStyleParams(style, gl, mipmaps, anisotropicExt, glFunctionName, firstParam, forceClamp, firstCreation) {\n  const castParam = firstParam;\n  if (!firstCreation || style.addressModeU !== \"repeat\" || style.addressModeV !== \"repeat\" || style.addressModeW !== \"repeat\") {\n    const wrapModeS = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeU];\n    const wrapModeT = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeV];\n    const wrapModeR = wrapModeToGlAddress[forceClamp ? \"clamp-to-edge\" : style.addressModeW];\n    gl[glFunctionName](castParam, gl.TEXTURE_WRAP_S, wrapModeS);\n    gl[glFunctionName](castParam, gl.TEXTURE_WRAP_T, wrapModeT);\n    if (gl.TEXTURE_WRAP_R)\n      gl[glFunctionName](castParam, gl.TEXTURE_WRAP_R, wrapModeR);\n  }\n  if (!firstCreation || style.magFilter !== \"linear\") {\n    gl[glFunctionName](castParam, gl.TEXTURE_MAG_FILTER, scaleModeToGlFilter[style.magFilter]);\n  }\n  if (mipmaps) {\n    if (!firstCreation || style.mipmapFilter !== \"linear\") {\n      const glFilterMode = mipmapScaleModeToGlFilter[style.minFilter][style.mipmapFilter];\n      gl[glFunctionName](castParam, gl.TEXTURE_MIN_FILTER, glFilterMode);\n    }\n  } else {\n    gl[glFunctionName](castParam, gl.TEXTURE_MIN_FILTER, scaleModeToGlFilter[style.minFilter]);\n  }\n  if (anisotropicExt && style.maxAnisotropy > 1) {\n    const level = Math.min(style.maxAnisotropy, gl.getParameter(anisotropicExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT));\n    gl[glFunctionName](castParam, anisotropicExt.TEXTURE_MAX_ANISOTROPY_EXT, level);\n  }\n  if (style.compare) {\n    gl[glFunctionName](castParam, gl.TEXTURE_COMPARE_FUNC, compareModeToGlCompare[style.compare]);\n  }\n}\n\nexport { applyStyleParams };\n//# sourceMappingURL=applyStyleParams.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { Texture } from '../../shared/texture/Texture.mjs';\nimport { GlTexture } from './GlTexture.mjs';\nimport { glUploadBufferImageResource } from './uploaders/glUploadBufferImageResource.mjs';\nimport { glUploadCompressedTextureResource } from './uploaders/glUploadCompressedTextureResource.mjs';\nimport { glUploadImageResource } from './uploaders/glUploadImageResource.mjs';\nimport { glUploadVideoResource } from './uploaders/glUploadVideoResource.mjs';\nimport { applyStyleParams } from './utils/applyStyleParams.mjs';\nimport { mapFormatToGlFormat } from './utils/mapFormatToGlFormat.mjs';\nimport { mapFormatToGlInternalFormat } from './utils/mapFormatToGlInternalFormat.mjs';\nimport { mapFormatToGlType } from './utils/mapFormatToGlType.mjs';\nimport './utils/unpremultiplyAlpha.mjs';\n\n\"use strict\";\nconst BYTES_PER_PIXEL = 4;\nclass GlTextureSystem {\n  constructor(renderer) {\n    this.managedTextures = [];\n    this._glTextures = /* @__PURE__ */ Object.create(null);\n    this._glSamplers = /* @__PURE__ */ Object.create(null);\n    this._boundTextures = [];\n    this._activeTextureLocation = -1;\n    this._boundSamplers = /* @__PURE__ */ Object.create(null);\n    this._uploads = {\n      image: glUploadImageResource,\n      buffer: glUploadBufferImageResource,\n      video: glUploadVideoResource,\n      compressed: glUploadCompressedTextureResource\n    };\n    // TODO - separate samplers will be a cool thing to add, but not right now!\n    this._useSeparateSamplers = false;\n    this._renderer = renderer;\n  }\n  contextChange(gl) {\n    this._gl = gl;\n    if (!this._mapFormatToInternalFormat) {\n      this._mapFormatToInternalFormat = mapFormatToGlInternalFormat(gl, this._renderer.context.extensions);\n      this._mapFormatToType = mapFormatToGlType(gl);\n      this._mapFormatToFormat = mapFormatToGlFormat(gl);\n    }\n    this._glTextures = /* @__PURE__ */ Object.create(null);\n    this._glSamplers = /* @__PURE__ */ Object.create(null);\n    this._boundSamplers = /* @__PURE__ */ Object.create(null);\n    for (let i = 0; i < 16; i++) {\n      this.bind(Texture.EMPTY, i);\n    }\n  }\n  initSource(source) {\n    this.bind(source);\n  }\n  bind(texture, location = 0) {\n    const source = texture.source;\n    if (texture) {\n      this.bindSource(source, location);\n      if (this._useSeparateSamplers) {\n        this._bindSampler(source.style, location);\n      }\n    } else {\n      this.bindSource(null, location);\n      if (this._useSeparateSamplers) {\n        this._bindSampler(null, location);\n      }\n    }\n  }\n  bindSource(source, location = 0) {\n    const gl = this._gl;\n    source._touched = this._renderer.textureGC.count;\n    if (this._boundTextures[location] !== source) {\n      this._boundTextures[location] = source;\n      this._activateLocation(location);\n      source = source || Texture.EMPTY.source;\n      const glTexture = this.getGlSource(source);\n      gl.bindTexture(glTexture.target, glTexture.texture);\n    }\n  }\n  _bindSampler(style, location = 0) {\n    const gl = this._gl;\n    if (!style) {\n      this._boundSamplers[location] = null;\n      gl.bindSampler(location, null);\n      return;\n    }\n    const sampler = this._getGlSampler(style);\n    if (this._boundSamplers[location] !== sampler) {\n      this._boundSamplers[location] = sampler;\n      gl.bindSampler(location, sampler);\n    }\n  }\n  unbind(texture) {\n    const source = texture.source;\n    const boundTextures = this._boundTextures;\n    const gl = this._gl;\n    for (let i = 0; i < boundTextures.length; i++) {\n      if (boundTextures[i] === source) {\n        this._activateLocation(i);\n        const glTexture = this.getGlSource(source);\n        gl.bindTexture(glTexture.target, null);\n        boundTextures[i] = null;\n      }\n    }\n  }\n  _activateLocation(location) {\n    if (this._activeTextureLocation !== location) {\n      this._activeTextureLocation = location;\n      this._gl.activeTexture(this._gl.TEXTURE0 + location);\n    }\n  }\n  _initSource(source) {\n    const gl = this._gl;\n    const glTexture = new GlTexture(gl.createTexture());\n    glTexture.type = this._mapFormatToType[source.format];\n    glTexture.internalFormat = this._mapFormatToInternalFormat[source.format];\n    glTexture.format = this._mapFormatToFormat[source.format];\n    if (source.autoGenerateMipmaps && (this._renderer.context.supports.nonPowOf2mipmaps || source.isPowerOfTwo)) {\n      const biggestDimension = Math.max(source.width, source.height);\n      source.mipLevelCount = Math.floor(Math.log2(biggestDimension)) + 1;\n    }\n    this._glTextures[source.uid] = glTexture;\n    if (!this.managedTextures.includes(source)) {\n      source.on(\"update\", this.onSourceUpdate, this);\n      source.on(\"resize\", this.onSourceUpdate, this);\n      source.on(\"styleChange\", this.onStyleChange, this);\n      source.on(\"destroy\", this.onSourceDestroy, this);\n      source.on(\"unload\", this.onSourceUnload, this);\n      source.on(\"updateMipmaps\", this.onUpdateMipmaps, this);\n      this.managedTextures.push(source);\n    }\n    this.onSourceUpdate(source);\n    this.updateStyle(source, false);\n    return glTexture;\n  }\n  onStyleChange(source) {\n    this.updateStyle(source, false);\n  }\n  updateStyle(source, firstCreation) {\n    const gl = this._gl;\n    const glTexture = this.getGlSource(source);\n    gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n    this._boundTextures[this._activeTextureLocation] = source;\n    applyStyleParams(\n      source.style,\n      gl,\n      source.mipLevelCount > 1,\n      this._renderer.context.extensions.anisotropicFiltering,\n      \"texParameteri\",\n      gl.TEXTURE_2D,\n      // will force a clamp to edge if the texture is not a power of two\n      !this._renderer.context.supports.nonPowOf2wrapping && !source.isPowerOfTwo,\n      firstCreation\n    );\n  }\n  onSourceUnload(source) {\n    const glTexture = this._glTextures[source.uid];\n    if (!glTexture)\n      return;\n    this.unbind(source);\n    this._glTextures[source.uid] = null;\n    this._gl.deleteTexture(glTexture.texture);\n  }\n  onSourceUpdate(source) {\n    const gl = this._gl;\n    const glTexture = this.getGlSource(source);\n    gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n    this._boundTextures[this._activeTextureLocation] = source;\n    if (this._uploads[source.uploadMethodId]) {\n      this._uploads[source.uploadMethodId].upload(source, glTexture, gl, this._renderer.context.webGLVersion);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, source.pixelWidth, source.pixelHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    }\n    if (source.autoGenerateMipmaps && source.mipLevelCount > 1) {\n      this.onUpdateMipmaps(source, false);\n    }\n  }\n  onUpdateMipmaps(source, bind = true) {\n    if (bind)\n      this.bindSource(source, 0);\n    const glTexture = this.getGlSource(source);\n    this._gl.generateMipmap(glTexture.target);\n  }\n  onSourceDestroy(source) {\n    source.off(\"destroy\", this.onSourceDestroy, this);\n    source.off(\"update\", this.onSourceUpdate, this);\n    source.off(\"resize\", this.onSourceUpdate, this);\n    source.off(\"unload\", this.onSourceUnload, this);\n    source.off(\"styleChange\", this.onStyleChange, this);\n    source.off(\"updateMipmaps\", this.onUpdateMipmaps, this);\n    this.managedTextures.splice(this.managedTextures.indexOf(source), 1);\n    this.onSourceUnload(source);\n  }\n  _initSampler(style) {\n    const gl = this._gl;\n    const glSampler = this._gl.createSampler();\n    this._glSamplers[style._resourceId] = glSampler;\n    applyStyleParams(\n      style,\n      gl,\n      this._boundTextures[this._activeTextureLocation].mipLevelCount > 1,\n      this._renderer.context.extensions.anisotropicFiltering,\n      \"samplerParameteri\",\n      glSampler,\n      false,\n      true\n    );\n    return this._glSamplers[style._resourceId];\n  }\n  _getGlSampler(sampler) {\n    return this._glSamplers[sampler._resourceId] || this._initSampler(sampler);\n  }\n  getGlSource(source) {\n    return this._glTextures[source.uid] || this._initSource(source);\n  }\n  generateCanvas(texture) {\n    const { pixels, width, height } = this.getPixels(texture);\n    const canvas = DOMAdapter.get().createCanvas();\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n      const imageData = ctx.createImageData(width, height);\n      imageData.data.set(pixels);\n      ctx.putImageData(imageData, 0, 0);\n    }\n    return canvas;\n  }\n  getPixels(texture) {\n    const resolution = texture.source.resolution;\n    const frame = texture.frame;\n    const width = Math.max(Math.round(frame.width * resolution), 1);\n    const height = Math.max(Math.round(frame.height * resolution), 1);\n    const pixels = new Uint8Array(BYTES_PER_PIXEL * width * height);\n    const renderer = this._renderer;\n    const renderTarget = renderer.renderTarget.getRenderTarget(texture);\n    const glRenterTarget = renderer.renderTarget.getGpuRenderTarget(renderTarget);\n    const gl = renderer.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, glRenterTarget.resolveTargetFramebuffer);\n    gl.readPixels(\n      Math.round(frame.x * resolution),\n      Math.round(frame.y * resolution),\n      width,\n      height,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      pixels\n    );\n    if (false) {\n      unpremultiplyAlpha(pixels);\n    }\n    return { pixels: new Uint8ClampedArray(pixels.buffer), width, height };\n  }\n  destroy() {\n    this.managedTextures.slice().forEach((source) => this.onSourceDestroy(source));\n    this.managedTextures = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nGlTextureSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem\n  ],\n  name: \"texture\"\n};\n\nexport { GlTextureSystem };\n//# sourceMappingURL=GlTextureSystem.mjs.map\n","import { DOMAdapter } from '../../../../../environment/adapter.mjs';\n\n\"use strict\";\nfunction mapFormatToGlInternalFormat(gl, extensions) {\n  let srgb = {};\n  let bgra8unorm = gl.RGBA;\n  if (!(gl instanceof DOMAdapter.get().getWebGLRenderingContext())) {\n    srgb = {\n      \"rgba8unorm-srgb\": gl.SRGB8_ALPHA8,\n      \"bgra8unorm-srgb\": gl.SRGB8_ALPHA8\n    };\n    bgra8unorm = gl.RGBA8;\n  } else if (extensions.srgb) {\n    srgb = {\n      \"rgba8unorm-srgb\": extensions.srgb.SRGB8_ALPHA8_EXT,\n      \"bgra8unorm-srgb\": extensions.srgb.SRGB8_ALPHA8_EXT\n    };\n  }\n  return {\n    // 8-bit formats\n    r8unorm: gl.R8,\n    r8snorm: gl.R8_SNORM,\n    r8uint: gl.R8UI,\n    r8sint: gl.R8I,\n    // 16-bit formats\n    r16uint: gl.R16UI,\n    r16sint: gl.R16I,\n    r16float: gl.R16F,\n    rg8unorm: gl.RG8,\n    rg8snorm: gl.RG8_SNORM,\n    rg8uint: gl.RG8UI,\n    rg8sint: gl.RG8I,\n    // 32-bit formats\n    r32uint: gl.R32UI,\n    r32sint: gl.R32I,\n    r32float: gl.R32F,\n    rg16uint: gl.RG16UI,\n    rg16sint: gl.RG16I,\n    rg16float: gl.RG16F,\n    rgba8unorm: gl.RGBA,\n    ...srgb,\n    // Packed 32-bit formats\n    rgba8snorm: gl.RGBA8_SNORM,\n    rgba8uint: gl.RGBA8UI,\n    rgba8sint: gl.RGBA8I,\n    bgra8unorm,\n    rgb9e5ufloat: gl.RGB9_E5,\n    rgb10a2unorm: gl.RGB10_A2,\n    rg11b10ufloat: gl.R11F_G11F_B10F,\n    // 64-bit formats\n    rg32uint: gl.RG32UI,\n    rg32sint: gl.RG32I,\n    rg32float: gl.RG32F,\n    rgba16uint: gl.RGBA16UI,\n    rgba16sint: gl.RGBA16I,\n    rgba16float: gl.RGBA16F,\n    // 128-bit formats\n    rgba32uint: gl.RGBA32UI,\n    rgba32sint: gl.RGBA32I,\n    rgba32float: gl.RGBA32F,\n    // Depth/stencil formats\n    stencil8: gl.STENCIL_INDEX8,\n    depth16unorm: gl.DEPTH_COMPONENT16,\n    depth24plus: gl.DEPTH_COMPONENT24,\n    \"depth24plus-stencil8\": gl.DEPTH24_STENCIL8,\n    depth32float: gl.DEPTH_COMPONENT32F,\n    \"depth32float-stencil8\": gl.DEPTH32F_STENCIL8,\n    // Compressed formats\n    ...extensions.s3tc ? {\n      \"bc1-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT,\n      \"bc2-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n      \"bc3-rgba-unorm\": extensions.s3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT\n    } : {},\n    ...extensions.s3tc_sRGB ? {\n      \"bc1-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT,\n      \"bc2-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,\n      \"bc3-rgba-unorm-srgb\": extensions.s3tc_sRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT\n    } : {},\n    ...extensions.rgtc ? {\n      \"bc4-r-unorm\": extensions.rgtc.COMPRESSED_RED_RGTC1_EXT,\n      \"bc4-r-snorm\": extensions.rgtc.COMPRESSED_SIGNED_RED_RGTC1_EXT,\n      \"bc5-rg-unorm\": extensions.rgtc.COMPRESSED_RED_GREEN_RGTC2_EXT,\n      \"bc5-rg-snorm\": extensions.rgtc.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT\n    } : {},\n    ...extensions.bptc ? {\n      \"bc6h-rgb-float\": extensions.bptc.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT,\n      \"bc6h-rgb-ufloat\": extensions.bptc.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT,\n      \"bc7-rgba-unorm\": extensions.bptc.COMPRESSED_RGBA_BPTC_UNORM_EXT,\n      \"bc7-rgba-unorm-srgb\": extensions.bptc.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT\n    } : {},\n    ...extensions.etc ? {\n      \"etc2-rgb8unorm\": extensions.etc.COMPRESSED_RGB8_ETC2,\n      \"etc2-rgb8unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_ETC2,\n      \"etc2-rgb8a1unorm\": extensions.etc.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n      \"etc2-rgb8a1unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n      \"etc2-rgba8unorm\": extensions.etc.COMPRESSED_RGBA8_ETC2_EAC,\n      \"etc2-rgba8unorm-srgb\": extensions.etc.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC,\n      \"eac-r11unorm\": extensions.etc.COMPRESSED_R11_EAC,\n      // 'eac-r11snorm'\n      \"eac-rg11unorm\": extensions.etc.COMPRESSED_SIGNED_RG11_EAC\n      // 'eac-rg11snorm'\n    } : {},\n    ...extensions.astc ? {\n      \"astc-4x4-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_4x4_KHR,\n      \"astc-4x4-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR,\n      \"astc-5x4-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_5x4_KHR,\n      \"astc-5x4-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR,\n      \"astc-5x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_5x5_KHR,\n      \"astc-5x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR,\n      \"astc-6x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_6x5_KHR,\n      \"astc-6x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR,\n      \"astc-6x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_6x6_KHR,\n      \"astc-6x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR,\n      \"astc-8x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x5_KHR,\n      \"astc-8x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR,\n      \"astc-8x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x6_KHR,\n      \"astc-8x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR,\n      \"astc-8x8-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_8x8_KHR,\n      \"astc-8x8-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR,\n      \"astc-10x5-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x5_KHR,\n      \"astc-10x5-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR,\n      \"astc-10x6-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x6_KHR,\n      \"astc-10x6-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR,\n      \"astc-10x8-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x8_KHR,\n      \"astc-10x8-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR,\n      \"astc-10x10-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_10x10_KHR,\n      \"astc-10x10-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR,\n      \"astc-12x10-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_12x10_KHR,\n      \"astc-12x10-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR,\n      \"astc-12x12-unorm\": extensions.astc.COMPRESSED_RGBA_ASTC_12x12_KHR,\n      \"astc-12x12-unorm-srgb\": extensions.astc.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR\n    } : {}\n  };\n}\n\nexport { mapFormatToGlInternalFormat };\n//# sourceMappingURL=mapFormatToGlInternalFormat.mjs.map\n","\"use strict\";\nfunction mapFormatToGlType(gl) {\n  return {\n    // 8-bit formats\n    r8unorm: gl.UNSIGNED_BYTE,\n    r8snorm: gl.BYTE,\n    r8uint: gl.UNSIGNED_BYTE,\n    r8sint: gl.BYTE,\n    // 16-bit formats\n    r16uint: gl.UNSIGNED_SHORT,\n    r16sint: gl.SHORT,\n    r16float: gl.HALF_FLOAT,\n    rg8unorm: gl.UNSIGNED_BYTE,\n    rg8snorm: gl.BYTE,\n    rg8uint: gl.UNSIGNED_BYTE,\n    rg8sint: gl.BYTE,\n    // 32-bit formats\n    r32uint: gl.UNSIGNED_INT,\n    r32sint: gl.INT,\n    r32float: gl.FLOAT,\n    rg16uint: gl.UNSIGNED_SHORT,\n    rg16sint: gl.SHORT,\n    rg16float: gl.HALF_FLOAT,\n    rgba8unorm: gl.UNSIGNED_BYTE,\n    \"rgba8unorm-srgb\": gl.UNSIGNED_BYTE,\n    // Packed 32-bit formats\n    rgba8snorm: gl.BYTE,\n    rgba8uint: gl.UNSIGNED_BYTE,\n    rgba8sint: gl.BYTE,\n    bgra8unorm: gl.UNSIGNED_BYTE,\n    \"bgra8unorm-srgb\": gl.UNSIGNED_BYTE,\n    rgb9e5ufloat: gl.UNSIGNED_INT_5_9_9_9_REV,\n    rgb10a2unorm: gl.UNSIGNED_INT_2_10_10_10_REV,\n    rg11b10ufloat: gl.UNSIGNED_INT_10F_11F_11F_REV,\n    // 64-bit formats\n    rg32uint: gl.UNSIGNED_INT,\n    rg32sint: gl.INT,\n    rg32float: gl.FLOAT,\n    rgba16uint: gl.UNSIGNED_SHORT,\n    rgba16sint: gl.SHORT,\n    rgba16float: gl.HALF_FLOAT,\n    // 128-bit formats\n    rgba32uint: gl.UNSIGNED_INT,\n    rgba32sint: gl.INT,\n    rgba32float: gl.FLOAT,\n    // Depth/stencil formats\n    stencil8: gl.UNSIGNED_BYTE,\n    depth16unorm: gl.UNSIGNED_SHORT,\n    depth24plus: gl.UNSIGNED_INT,\n    \"depth24plus-stencil8\": gl.UNSIGNED_INT_24_8,\n    depth32float: gl.FLOAT,\n    \"depth32float-stencil8\": gl.FLOAT_32_UNSIGNED_INT_24_8_REV\n  };\n}\n\nexport { mapFormatToGlType };\n//# sourceMappingURL=mapFormatToGlType.mjs.map\n","\"use strict\";\nfunction mapFormatToGlFormat(gl) {\n  return {\n    // 8-bit formats\n    r8unorm: gl.RED,\n    r8snorm: gl.RED,\n    r8uint: gl.RED,\n    r8sint: gl.RED,\n    // 16-bit formats\n    r16uint: gl.RED,\n    r16sint: gl.RED,\n    r16float: gl.RED,\n    rg8unorm: gl.RG,\n    rg8snorm: gl.RG,\n    rg8uint: gl.RG,\n    rg8sint: gl.RG,\n    // 32-bit formats\n    r32uint: gl.RED,\n    r32sint: gl.RED,\n    r32float: gl.RED,\n    rg16uint: gl.RG,\n    rg16sint: gl.RG,\n    rg16float: gl.RG,\n    rgba8unorm: gl.RGBA,\n    \"rgba8unorm-srgb\": gl.RGBA,\n    // Packed 32-bit formats\n    rgba8snorm: gl.RGBA,\n    rgba8uint: gl.RGBA,\n    rgba8sint: gl.RGBA,\n    bgra8unorm: gl.RGBA,\n    \"bgra8unorm-srgb\": gl.RGBA,\n    rgb9e5ufloat: gl.RGB,\n    rgb10a2unorm: gl.RGBA,\n    rg11b10ufloat: gl.RGB,\n    // 64-bit formats\n    rg32uint: gl.RG,\n    rg32sint: gl.RG,\n    rg32float: gl.RG,\n    rgba16uint: gl.RGBA,\n    rgba16sint: gl.RGBA,\n    rgba16float: gl.RGBA,\n    // 128-bit formats\n    rgba32uint: gl.RGBA,\n    rgba32sint: gl.RGBA,\n    rgba32float: gl.RGBA,\n    // Depth/stencil formats\n    stencil8: gl.STENCIL_INDEX8,\n    depth16unorm: gl.DEPTH_COMPONENT,\n    depth24plus: gl.DEPTH_COMPONENT,\n    \"depth24plus-stencil8\": gl.DEPTH_STENCIL,\n    depth32float: gl.DEPTH_COMPONENT,\n    \"depth32float-stencil8\": gl.DEPTH_STENCIL\n  };\n}\n\nexport { mapFormatToGlFormat };\n//# sourceMappingURL=mapFormatToGlFormat.mjs.map\n","import { extensions, ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { GlGraphicsAdaptor } from '../../../scene/graphics/gl/GlGraphicsAdaptor.mjs';\nimport { GlMeshAdaptor } from '../../../scene/mesh/gl/GlMeshAdaptor.mjs';\nimport { GlBatchAdaptor } from '../../batcher/gl/GlBatchAdaptor.mjs';\nimport { AbstractRenderer } from '../shared/system/AbstractRenderer.mjs';\nimport { SharedSystems, SharedRenderPipes } from '../shared/system/SharedSystems.mjs';\nimport { RendererType } from '../types.mjs';\nimport { GlBufferSystem } from './buffer/GlBufferSystem.mjs';\nimport { GlContextSystem } from './context/GlContextSystem.mjs';\nimport { GlGeometrySystem } from './geometry/GlGeometrySystem.mjs';\nimport { GlBackBufferSystem } from './GlBackBufferSystem.mjs';\nimport { GlColorMaskSystem } from './GlColorMaskSystem.mjs';\nimport { GlEncoderSystem } from './GlEncoderSystem.mjs';\nimport { GlStencilSystem } from './GlStencilSystem.mjs';\nimport { GlUboSystem } from './GlUboSystem.mjs';\nimport { GlRenderTargetSystem } from './renderTarget/GlRenderTargetSystem.mjs';\nimport { GlShaderSystem } from './shader/GlShaderSystem.mjs';\nimport { GlUniformGroupSystem } from './shader/GlUniformGroupSystem.mjs';\nimport { GlStateSystem } from './state/GlStateSystem.mjs';\nimport { GlTextureSystem } from './texture/GlTextureSystem.mjs';\n\n\"use strict\";\nconst DefaultWebGLSystems = [\n  ...SharedSystems,\n  GlUboSystem,\n  GlBackBufferSystem,\n  GlContextSystem,\n  GlBufferSystem,\n  GlTextureSystem,\n  GlRenderTargetSystem,\n  GlGeometrySystem,\n  GlUniformGroupSystem,\n  GlShaderSystem,\n  GlEncoderSystem,\n  GlStateSystem,\n  GlStencilSystem,\n  GlColorMaskSystem\n];\nconst DefaultWebGLPipes = [...SharedRenderPipes];\nconst DefaultWebGLAdapters = [GlBatchAdaptor, GlMeshAdaptor, GlGraphicsAdaptor];\nconst systems = [];\nconst renderPipes = [];\nconst renderPipeAdaptors = [];\nextensions.handleByNamedList(ExtensionType.WebGLSystem, systems);\nextensions.handleByNamedList(ExtensionType.WebGLPipes, renderPipes);\nextensions.handleByNamedList(ExtensionType.WebGLPipesAdaptor, renderPipeAdaptors);\nextensions.add(...DefaultWebGLSystems, ...DefaultWebGLPipes, ...DefaultWebGLAdapters);\nclass WebGLRenderer extends AbstractRenderer {\n  constructor() {\n    const systemConfig = {\n      name: \"webgl\",\n      type: RendererType.WEBGL,\n      systems,\n      renderPipes,\n      renderPipeAdaptors\n    };\n    super(systemConfig);\n  }\n}\n\nexport { WebGLRenderer };\n//# sourceMappingURL=WebGLRenderer.mjs.map\n","import { UniformGroup } from '../../shared/shader/UniformGroup.mjs';\n\n\"use strict\";\nconst batchSamplersUniformGroupHash = {};\nfunction getBatchSamplersUniformGroup(maxTextures) {\n  let batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures];\n  if (batchSamplersUniformGroup)\n    return batchSamplersUniformGroup;\n  const sampleValues = new Int32Array(maxTextures);\n  for (let i = 0; i < maxTextures; i++) {\n    sampleValues[i] = i;\n  }\n  batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures] = new UniformGroup({\n    uTextures: { value: sampleValues, type: `i32`, size: maxTextures }\n  }, { isStatic: true });\n  return batchSamplersUniformGroup;\n}\n\nexport { getBatchSamplersUniformGroup };\n//# sourceMappingURL=getBatchSamplersUniformGroup.mjs.map\n"],"names":["GlGraphicsAdaptor","init","uniforms","UniformGroup","uColor","value","Float32Array","type","uTransformMatrix","Matrix","uRound","maxTextures","maxRecommendedTextures","glProgram","name","bits","colorBit","generateTextureBatchBit","localUniformBit","roundPixelsBit","this","shader","Shader","resources","localUniforms","batchSamplers","getBatchSamplersUniformGroup","execute","graphicsPipe","renderable","context","customShader","renderer","contextSystem","graphicsContext","geometry","instructions","getContextRenderData","groups","globalUniforms","bindGroup","state","set","bind","batches","i","instructionSize","batch","size","j","textures","length","texture","draw","start","destroy","extension","WebGLPipesAdaptor","GlMeshAdaptor","textureBit","_shader","uTexture","Texture","EMPTY","source","textureUniforms","uTextureMatrix","meshPipe","mesh","warn","uSampler","style","textureMatrix","mapCoord","localUniformsBindGroup","encoder","_geometry","GlBatchAdaptor","constructor","_didUpload","_tempState","State","for2d","batcherPipe","runners","contextChange","add","batchPipe","updateUniformGroup","uniformGroup","blendMode","BUFFER_TYPE","BUFFER_TYPE2","GlBuffer","buffer","updateID","byteLength","GlBufferSystem","_gpuBuffers","Object","create","_boundBufferBases","_renderer","_gl","gl","getGlBuffer","uid","createGLBuffer","glBuffer","bindBuffer","bindBufferBase","index","UNIFORM_BUFFER","bindBufferRange","offset","updateBuffer","_updateID","data","bufferSubData","_updateSize","BYTES_PER_ELEMENT","drawType","descriptor","usage","STATIC","STATIC_DRAW","DYNAMIC_DRAW","bufferData","destroyAll","id","deleteBuffer","onBufferDestroy","contextLost","ARRAY_BUFFER","INDEX","ELEMENT_ARRAY_BUFFER","UNIFORM","createBuffer","on","WebGLSystem","_GlContextSystem","supports","uint32Indices","uniformBufferObject","vertexArrayObject","srgbTextures","nonPowOf2wrapping","msaa","nonPowOf2mipmaps","extensions","handleContextLost","handleContextRestored","isLost","isContextLost","options","defaultOptions","initFromContext","alpha","background","premultipliedAlpha","antialias","backBuffer","useBackBuffer","createContext","preferWebGLVersion","stencil","preserveDrawingBuffer","powerPreference","webGLVersion","get","getWebGLRenderingContext","getExtensions","validateContext","emit","element","view","canvas","addEventListener","getContext","Error","common","anisotropicFiltering","getExtension","floatTextureLinear","s3tc","s3tc_sRGB","etc","etc1","pvrtc","atc","astc","bptc","rgtc","loseContext","drawBuffers","depthTexture","uint32ElementIndex","floatTexture","textureHalfFloat","textureHalfFloatLinear","vertexAttribDivisorANGLE","srgb","colorBufferFloat","provokeExt","provokingVertexWEBGL","FIRST_VERTEX_CONVENTION_WEBGL","event","preventDefault","_contextLossForced","setTimeout","restoreContext","removeEventListener","useProgram","forceContextLoss","attributes","getContextAttributes","isWebGl2","GlContextSystem","GL_FORMATS","GL_FORMATS2","GL_TARGETS","GL_TARGETS2","GL_TYPES","GL_TYPES2","infoMap","uint8x2","UNSIGNED_BYTE","uint8x4","sint8x2","BYTE","sint8x4","unorm8x2","unorm8x4","snorm8x2","snorm8x4","uint16x2","UNSIGNED_SHORT","uint16x4","sint16x2","SHORT","sint16x4","unorm16x2","unorm16x4","snorm16x2","snorm16x4","float16x2","HALF_FLOAT","float16x4","float32","FLOAT","float32x2","float32x3","float32x4","uint32","UNSIGNED_INT","uint32x2","uint32x3","uint32x4","sint32","INT","sint32x2","sint32x3","sint32x4","topologyToGlMap","GlGeometrySystem","_geometryVaoHash","_activeGeometry","_activeVao","hasVao","hasInstance","nativeVaoExtension","createVertexArray","createVertexArrayOES","bindVertexArray","vao","bindVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","nativeInstancedExtension","drawArraysInstanced","a","b","c","d","drawArraysInstancedANGLE","drawElementsInstanced","e","drawElementsInstancedANGLE","vertexAttribDivisor","program","getVao","updateBuffers","reset","unbind","bufferSystem","buffers","checkCompatibility","geometryAttributes","shaderAttributes","_attributeData","getSignature","attribs","strings","push","location","join","_key","initGeometryVao","_incRefCount","_getProgramData","signature","onGeometryDestroy","vaoObjectHash","ensureAttributes","activateVao","indexBuffer","lastBuffer","attribute","programAttrib","enableVertexAttribArray","attributeInfo","getAttributeInfoFromFormat","format","substring","vertexAttribIPointer","stride","vertexAttribPointer","normalised","instance","topology","instanceCount","glTopology","byteSize","glType","drawElements","getSize","drawArrays","bigTriangleGeometry","Geometry","aPosition","_GlBackBufferSystem","_useBackBufferThisRender","_antialias","_state","bigTriangleProgram","GlProgram","vertex","fragment","_bigTriangleShader","WHITE","renderStart","renderTarget","getRenderTarget","target","isRoot","renderTarget2","_targetTexture","colorTexture","_getBackBufferTexture","renderEnd","_presentBackBuffer","finishRenderPass","_backBufferTexture","targetSourceTexture","TextureSource","width","height","resolution","_resolution","resize","priority","GlBackBufferSystem","GlColorMaskSystem","_colorMaskCache","setMask","colorMask","GlEncoderSystem","commandFinished","Promise","resolve","setGeometry","skipSync","_activeProgram","GlStencilSystem","_stencilCache","enabled","stencilReference","stencilMode","NONE","_renderTargetStencilState","onRenderTargetChange","_comparisonFuncMapping","always","ALWAYS","never","NEVER","equal","EQUAL","NOTEQUAL","less","LESS","LEQUAL","greater","GREATER","GEQUAL","_stencilOpsMapping","keep","KEEP","zero","ZERO","replace","REPLACE","invert","INVERT","INCR","DECR","INCR_WRAP","DECR_WRAP","_activeRenderTarget","stencilState","DISABLED","setStencilMode","mode","GpuStencilModesToPixi","enable","STENCIL_TEST","stencilFunc","stencilBack","compare","stencilOp","passOp","disable","WGSL_TO_STD40_SIZE","f32","createUboElementsSTD40","uniformData","uboElements","map","chunkSize","uboElement","Math","max","lineUpValue","ceil","generateArraySyncSTD40","offsetToAdd","rowSize","elementSize","remainder","createUboSyncFunctionSTD40","createUboSyncFunction","uboSyncFunctions","GlUboSystem","UboSystem","super","createUboElements","generateUboSync","GlRenderTarget","msaaRenderBuffer","GlRenderTargetAdaptor","_clearColorCache","_viewPortCache","Rectangle","renderTargetSystem","_renderTargetSystem","copyToTexture","sourceRenderSurfaceTexture","destinationTexture","originSrc","originDest","glRenderTarget","getGpuRenderTarget","bindFramebuffer","FRAMEBUFFER","resolveTargetFramebuffer","copyTexSubImage2D","TEXTURE_2D","x","y","startRenderPass","clear","clearColor","viewport","gpuRenderTarget","viewPortY","pixelHeight","colorTextures","forEach","framebuffer","viewPortCache","depthStencilRenderBuffer","depth","_initStencil","READ_FRAMEBUFFER","blitFramebuffer","COLOR_BUFFER_BIT","NEAREST","initGpuRenderTarget","resource","_initColor","destroyGpuRenderTarget","deleteFramebuffer","deleteRenderbuffer","renderBuffer","_renderTarget","ALL","COLOR","defaultClearColor","clearColorCache","clearColorArray","resizeGpuRenderTarget","_resizeColor","_resizeStencil","createFramebuffer","pixelWidth","bindSource","glTexture","getGlSource","framebufferTexture2D","COLOR_ATTACHMENT0","viewFramebuffer","_","createRenderbuffer","source2","glInternalFormat","internalFormat","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","framebufferRenderbuffer","DEPTH_STENCIL_ATTACHMENT","DEPTH24_STENCIL8","renderbufferStorage","DEPTH_STENCIL","GlRenderTargetSystem","RenderTargetSystem","adaptor","GlProgramData","uniformGroups","uniformDirtyGroups","uniformBlockBindings","compileShader","src","createShader","shaderSource","booleanArray","array","Array","defaultValue","Int32Array","Uint32Array","GL_TABLE","GL_TO_GLSL_TYPES","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT_VEC2","INT_VEC3","INT_VEC4","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_2D","SAMPLER_CUBE","INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_CUBE","SAMPLER_2D_ARRAY","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D_ARRAY","GLSL_TO_VERTEX_TYPES","float","vec2","vec3","vec4","int","ivec2","ivec3","ivec4","uint","uvec2","uvec3","uvec4","bool","bvec2","bvec3","bvec4","mapType","typeNames","keys","tn","mapGlToVertexFormat","typeValue","logPrettyShaderError","shaderSrc","getShaderSource","split","line","shaderLog","getShaderInfoLog","splitShader","dedupe","lineNumbers","parseFloat","filter","n","logArgs","number","fragmentSourceToLog","console","error","groupCollapsed","groupEnd","defaultSyncData","textureCount","blockIndex","GlShaderSystem","_programDataHash","_nextIndex","_boundUniformsIdsToIndexHash","_boundIndexToUniformsHash","_shaderSyncFunctions","_maxBindings","MAX_UNIFORM_BUFFER_BINDINGS","getParameter","_setProgram","syncFunction","_generateShaderSync","bindUniformBlock","programData","isBufferResource","_bufferResource","ubo","boundIndex","nextIndex","currentBoundUniformGroup","uniformBlockIndex","_uniformBlockData","uniformBlockBinding","_createProgramData","key","glVertShader","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","webGLProgram","createProgram","attachShader","transformFeedbackVaryings","names","bufferMode","SEPARATE_ATTRIBS","INTERLEAVED_ATTRIBS","linkProgram","getProgramParameter","LINK_STATUS","vertexShader","fragmentShader","getShaderParameter","COMPILE_STATUS","getProgramInfoLog","logProgramError","sortAttributes","totalAttributes","ACTIVE_ATTRIBUTES","attribData","getActiveAttrib","startsWith","sort","bindAttribLocation","getAttribLocation","extractAttributesFromGlProgram","test","_uniformData","totalUniforms","ACTIVE_UNIFORMS","getActiveUniform","isArray","match","getUniformData","ACTIVE_UNIFORM_BLOCKS","uniformBlocks","totalUniformsBlocks","getActiveUniformBlockName","getUniformBlockIndex","getActiveUniformBlockParameter","UNIFORM_BLOCK_DATA_SIZE","getUboData","deleteShader","getUniformLocation","generateProgram","shaderSystem","funcFragments","headerFragments","addedTextreSystem","group","BufferResource","uniformName","_uniformBindMap","uniform1i","functionSource","Function","generateShaderSyncCode","UNIFORM_TO_SINGLE_SETTERS","i32","u32","UNIFORM_TO_ARRAY_SETTERS","GlUniformGroupSystem","_cache","_uniformGroupSyncHash","syncData","isStatic","_dirtyId","_getUniformSyncFunction","syncFunc","_signature","_createUniformSyncFunction","uniformGroupSyncHash","_getSignature","_generateUniformsSync","uniform","uniformStructures","parsed","uniformParsers","parser","template","generateUniformsSync","preFix","_GlStateSystem","stateId","polygonOffset","_blendEq","setBlend","setOffset","setCullFace","setDepthTest","setFrontFace","setDepthMask","checks","defaultState","blendModesMap","blendMap","normal","ONE","ONE_MINUS_SRC_ALPHA","multiply","DST_COLOR","screen","ONE_MINUS_SRC_COLOR","none","SRC_ALPHA","erase","mapWebGLBlendModesToPixi","diff","call","forceState","_updateCheck","_checkBlendMode","BLEND","_checkPolygonOffset","POLYGON_OFFSET_FILL","DEPTH_TEST","depthMask","CULL_FACE","frontFace","setBlendMode","blendFunc","blendFuncSeparate","blendEquationSeparate","FUNC_ADD","setPolygonOffset","scale","pixelStorei","UNPACK_FLIP_Y_WEBGL","func","indexOf","splice","system","GlStateSystem","GlTexture","RGBA","samplerType","glUploadBufferImageResource","upload","texSubImage2D","texImage2D","compressedFormatMap","glUploadCompressedTextureResource","UNPACK_ALIGNMENT","mipWidth","mipHeight","compressed","levelBuffer","compressedTexImage2D","glUploadImageResource","alphaMode","UNPACK_PREMULTIPLY_ALPHA_WEBGL","glWidth","glHeight","textureWidth","textureHeight","resourceWidth","resourceHeight","glUploadVideoResource","isValid","scaleModeToGlFilter","linear","nearest","mipmapScaleModeToGlFilter","wrapModeToGlAddress","repeat","compareModeToGlCompare","applyStyleParams","mipmaps","anisotropicExt","glFunctionName","firstParam","forceClamp","firstCreation","castParam","addressModeU","addressModeV","addressModeW","wrapModeS","wrapModeT","wrapModeR","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","magFilter","TEXTURE_MAG_FILTER","mipmapFilter","glFilterMode","minFilter","TEXTURE_MIN_FILTER","maxAnisotropy","level","min","MAX_TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_COMPARE_FUNC","GlTextureSystem","managedTextures","_glTextures","_glSamplers","_boundTextures","_activeTextureLocation","_boundSamplers","_uploads","image","video","_useSeparateSamplers","_mapFormatToInternalFormat","bgra8unorm","SRGB8_ALPHA8_EXT","SRGB8_ALPHA8","RGBA8","r8unorm","R8","r8snorm","R8_SNORM","r8uint","R8UI","r8sint","R8I","r16uint","R16UI","r16sint","R16I","r16float","R16F","rg8unorm","RG8","rg8snorm","RG8_SNORM","rg8uint","RG8UI","rg8sint","RG8I","r32uint","R32UI","r32sint","R32I","r32float","R32F","rg16uint","RG16UI","rg16sint","RG16I","rg16float","RG16F","rgba8unorm","rgba8snorm","RGBA8_SNORM","rgba8uint","RGBA8UI","rgba8sint","RGBA8I","rgb9e5ufloat","RGB9_E5","rgb10a2unorm","RGB10_A2","rg11b10ufloat","R11F_G11F_B10F","rg32uint","RG32UI","rg32sint","RG32I","rg32float","RG32F","rgba16uint","RGBA16UI","rgba16sint","RGBA16I","rgba16float","RGBA16F","rgba32uint","RGBA32UI","rgba32sint","RGBA32I","rgba32float","RGBA32F","stencil8","STENCIL_INDEX8","depth16unorm","DEPTH_COMPONENT16","depth24plus","DEPTH_COMPONENT24","depth32float","DEPTH_COMPONENT32F","DEPTH32F_STENCIL8","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_R11_EAC","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","mapFormatToGlInternalFormat","_mapFormatToType","UNSIGNED_INT_5_9_9_9_REV","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_24_8","FLOAT_32_UNSIGNED_INT_24_8_REV","mapFormatToGlType","_mapFormatToFormat","RED","RG","RGB","DEPTH_COMPONENT","mapFormatToGlFormat","initSource","_bindSampler","_touched","textureGC","count","_activateLocation","bindTexture","bindSampler","sampler","_getGlSampler","boundTextures","activeTexture","TEXTURE0","_initSource","createTexture","autoGenerateMipmaps","isPowerOfTwo","biggestDimension","mipLevelCount","floor","log2","includes","onSourceUpdate","onStyleChange","onSourceDestroy","onSourceUnload","onUpdateMipmaps","updateStyle","deleteTexture","uploadMethodId","generateMipmap","off","_initSampler","glSampler","createSampler","_resourceId","generateCanvas","pixels","getPixels","createCanvas","ctx","imageData","createImageData","putImageData","frame","round","Uint8Array","glRenterTarget","readPixels","Uint8ClampedArray","slice","DefaultWebGLSystems","SharedSystems","DefaultWebGLPipes","DefaultWebGLAdapters","systems","renderPipes","renderPipeAdaptors","handleByNamedList","WebGLPipes","WebGLRenderer","AbstractRenderer","WEBGL","batchSamplersUniformGroupHash","batchSamplersUniformGroup","sampleValues","uTextures"],"sourceRoot":""}